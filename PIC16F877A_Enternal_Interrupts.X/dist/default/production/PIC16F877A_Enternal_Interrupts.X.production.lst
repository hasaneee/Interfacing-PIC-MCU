

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Dec 15 18:40:31 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  000B                     _INTCONbits	set	11
   184  0059                     _INTF	set	89
   185  0043                     _RD3	set	67
   186  0042                     _RD2	set	66
   187  0047                     _RD7	set	71
   188  0046                     _RD6	set	70
   189  0045                     _RD5	set	69
   190  0044                     _RD4	set	68
   191  0081                     _OPTION_REG	set	129
   192  0086                     _TRISBbits	set	134
   193  0088                     _TRISD	set	136
   194                           
   195                           	psect	strings
   196  0400                     __pstrings:
   197  0400                     stringtab:
   198  0400                     __stringtab:
   199  0400                     stringcode:	
   200                           ;	String table - string pointers are 1 byte each
   201                           
   202  0400                     stringdir:
   203  0400  3004               	movlw	high stringdir
   204  0401  008A               	movwf	10
   205  0402  0804               	movf	4,w
   206  0403  0A84               	incf	4,f
   207  0404  0782               	addwf	2,f
   208  0405                     __stringbase:
   209  0405  3400               	retlw	0
   210  0406                     __end_of__stringtab:
   211  0406                     STR_3:
   212  0406  3449               	retlw	73	;'I'
   213  0407  346E               	retlw	110	;'n'
   214  0408  3473               	retlw	115	;'s'
   215  0409  3469               	retlw	105	;'i'
   216  040A  3464               	retlw	100	;'d'
   217  040B  3465               	retlw	101	;'e'
   218  040C  3420               	retlw	32	;' '
   219  040D  344D               	retlw	77	;'M'
   220  040E  3461               	retlw	97	;'a'
   221  040F  3469               	retlw	105	;'i'
   222  0410  346E               	retlw	110	;'n'
   223  0411  3420               	retlw	32	;' '
   224  0412  344C               	retlw	76	;'L'
   225  0413  346F               	retlw	111	;'o'
   226  0414  346F               	retlw	111	;'o'
   227  0415  3470               	retlw	112	;'p'
   228  0416  3400               	retlw	0
   229  0417                     STR_2:
   230  0417  3453               	retlw	83	;'S'
   231  0418  3465               	retlw	101	;'e'
   232  0419  3472               	retlw	114	;'r'
   233  041A  3476               	retlw	118	;'v'
   234  041B  3469               	retlw	105	;'i'
   235  041C  3463               	retlw	99	;'c'
   236  041D  3465               	retlw	101	;'e'
   237  041E  3420               	retlw	32	;' '
   238  041F  3452               	retlw	82	;'R'
   239  0420  346F               	retlw	111	;'o'
   240  0421  3475               	retlw	117	;'u'
   241  0422  3474               	retlw	116	;'t'
   242  0423  3469               	retlw	105	;'i'
   243  0424  346E               	retlw	110	;'n'
   244  0425  3465               	retlw	101	;'e'
   245  0426  3400               	retlw	0
   246  0427                     STR_1:
   247  0427  3445               	retlw	69	;'E'
   248  0428  346E               	retlw	110	;'n'
   249  0429  3474               	retlw	116	;'t'
   250  042A  3465               	retlw	101	;'e'
   251  042B  3472               	retlw	114	;'r'
   252  042C  3420               	retlw	32	;' '
   253  042D  3449               	retlw	73	;'I'
   254  042E  346E               	retlw	110	;'n'
   255  042F  3474               	retlw	116	;'t'
   256  0430  3465               	retlw	101	;'e'
   257  0431  3472               	retlw	114	;'r'
   258  0432  3472               	retlw	114	;'r'
   259  0433  3475               	retlw	117	;'u'
   260  0434  3470               	retlw	112	;'p'
   261  0435  3474               	retlw	116	;'t'
   262  0436  3400               	retlw	0
   263  0437                     STR_4:
   264  0437  344E               	retlw	78	;'N'
   265  0438  3475               	retlw	117	;'u'
   266  0439  346D               	retlw	109	;'m'
   267  043A  3462               	retlw	98	;'b'
   268  043B  3465               	retlw	101	;'e'
   269  043C  3472               	retlw	114	;'r'
   270  043D  343A               	retlw	58	;':'
   271  043E  3420               	retlw	32	;' '
   272  043F  3400               	retlw	0
   273                           
   274                           	psect	cinit
   275  0015                     start_initialization:	
   276                           ; #config settings
   277                           
   278  0015                     __initialization:
   279                           
   280                           ; Clear objects allocated to BANK0
   281  0015  1283               	bcf	3,5	;RP0=0, select bank0
   282  0016  1303               	bcf	3,6	;RP1=0, select bank0
   283  0017  01BA               	clrf	__pbssBANK0& (0+127)
   284  0018  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   285  0019  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   286  001A  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   287  001B  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   288  001C  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   289  001D                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292  001D                     __end_of__initialization:
   293  001D  0183               	clrf	3
   294  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  003A                     __pbssBANK0:
   298  003A                     _number:
   299  003A                     	ds	2
   300  003C                     _ch4:
   301  003C                     	ds	1
   302  003D                     _ch3:
   303  003D                     	ds	1
   304  003E                     _ch2:
   305  003E                     	ds	1
   306  003F                     _ch1:
   307  003F                     	ds	1
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:
   311  0070                     ?_Lcd_SetBit:
   312  0070                     ?_Lcd_Cmd:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_Lcd_Start:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_Lcd_Print_Char:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_Lcd_Print_String:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_ISR_example:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?i1_Lcd_SetBit:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ??i1_Lcd_SetBit:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?i1_Lcd_Cmd:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?i1_Lcd_Print_Char:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?i1_Lcd_Print_String:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_Lcd_Clear:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     i1Lcd_SetBit@data_bit:	
   349                           ; 2 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353  0070                     	ds	1
   354  0071                     ??i1_Lcd_Cmd:
   355  0071                     ??i1_Lcd_Print_Char:	
   356                           ; 1 bytes @ 0x1
   357                           
   358                           
   359                           ; 1 bytes @ 0x1
   360  0071                     	ds	1
   361  0072                     i1Lcd_Print_Char@Lower_Nibble:
   362                           
   363                           ; 1 bytes @ 0x2
   364  0072                     	ds	1
   365  0073                     i1Lcd_Cmd@a:
   366  0073                     i1Lcd_Print_Char@Upper_Nibble:	
   367                           ; 1 bytes @ 0x3
   368                           
   369                           
   370                           ; 1 bytes @ 0x3
   371  0073                     	ds	1
   372  0074                     ??_Lcd_Clear:
   373  0074                     ?i1_Lcd_Set_Cursor:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0074                     i1Lcd_Set_Cursor@b:	
   377                           ; 1 bytes @ 0x4
   378                           
   379  0074                     i1Lcd_Print_Char@data:	
   380                           ; 1 bytes @ 0x4
   381                           
   382                           
   383                           ; 1 bytes @ 0x4
   384  0074                     	ds	1
   385  0075                     ??i1_Lcd_Set_Cursor:
   386  0075                     i1Lcd_Print_Char@i:	
   387                           ; 1 bytes @ 0x5
   388                           
   389                           
   390                           ; 2 bytes @ 0x5
   391  0075                     	ds	2
   392  0077                     i1Lcd_Set_Cursor@a:
   393  0077                     i1Lcd_Print_Char@i_114:	
   394                           ; 1 bytes @ 0x7
   395                           
   396                           
   397                           ; 2 bytes @ 0x7
   398  0077                     	ds	1
   399  0078                     i1Lcd_Set_Cursor@z:
   400                           
   401                           ; 1 bytes @ 0x8
   402  0078                     	ds	1
   403  0079                     ??i1_Lcd_Print_String:
   404  0079                     i1Lcd_Set_Cursor@y:	
   405                           ; 1 bytes @ 0x9
   406                           
   407  0079                     i1Lcd_Print_String@a:	
   408                           ; 1 bytes @ 0x9
   409                           
   410                           
   411                           ; 1 bytes @ 0x9
   412  0079                     	ds	1
   413  007A                     i1Lcd_Set_Cursor@temp:
   414  007A                     i1Lcd_Print_String@i:	
   415                           ; 1 bytes @ 0xA
   416                           
   417                           
   418                           ; 2 bytes @ 0xA
   419  007A                     	ds	2
   420                           
   421                           	psect	cstackBANK0
   422  0020                     __pcstackBANK0:
   423  0020                     ??_ISR_example:
   424                           
   425                           ; 1 bytes @ 0x0
   426  0020                     	ds	7
   427  0027                     ??_Lcd_SetBit:
   428  0027                     ?___awdiv:	
   429                           ; 1 bytes @ 0x7
   430                           
   431  0027                     Lcd_SetBit@data_bit:	
   432                           ; 2 bytes @ 0x7
   433                           
   434  0027                     ___awdiv@divisor:	
   435                           ; 1 bytes @ 0x7
   436                           
   437                           
   438                           ; 2 bytes @ 0x7
   439  0027                     	ds	1
   440  0028                     ??_Lcd_Cmd:
   441  0028                     ??_Lcd_Print_Char:	
   442                           ; 1 bytes @ 0x8
   443                           
   444                           
   445                           ; 1 bytes @ 0x8
   446  0028                     	ds	1
   447  0029                     Lcd_Print_Char@Lower_Nibble:
   448  0029                     ___awdiv@dividend:	
   449                           ; 1 bytes @ 0x9
   450                           
   451                           
   452                           ; 2 bytes @ 0x9
   453  0029                     	ds	1
   454  002A                     Lcd_Cmd@a:
   455  002A                     Lcd_Print_Char@Upper_Nibble:	
   456                           ; 1 bytes @ 0xA
   457                           
   458                           
   459                           ; 1 bytes @ 0xA
   460  002A                     	ds	1
   461  002B                     ?_Lcd_Set_Cursor:
   462  002B                     ??_Lcd_Start:	
   463                           ; 1 bytes @ 0xB
   464                           
   465  002B                     ??___awdiv:	
   466                           ; 1 bytes @ 0xB
   467                           
   468  002B                     Lcd_Set_Cursor@b:	
   469                           ; 1 bytes @ 0xB
   470                           
   471  002B                     Lcd_Print_Char@data:	
   472                           ; 1 bytes @ 0xB
   473                           
   474                           
   475                           ; 1 bytes @ 0xB
   476  002B                     	ds	1
   477  002C                     ??_Lcd_Set_Cursor:
   478  002C                     ___awdiv@counter:	
   479                           ; 1 bytes @ 0xC
   480                           
   481  002C                     Lcd_Print_Char@i:	
   482                           ; 1 bytes @ 0xC
   483                           
   484                           
   485                           ; 2 bytes @ 0xC
   486  002C                     	ds	1
   487  002D                     ___awdiv@sign:
   488                           
   489                           ; 1 bytes @ 0xD
   490  002D                     	ds	1
   491  002E                     Lcd_Set_Cursor@a:
   492  002E                     Lcd_Print_Char@i_114:	
   493                           ; 1 bytes @ 0xE
   494                           
   495  002E                     ___awdiv@quotient:	
   496                           ; 2 bytes @ 0xE
   497                           
   498                           
   499                           ; 2 bytes @ 0xE
   500  002E                     	ds	1
   501  002F                     Lcd_Set_Cursor@z:
   502                           
   503                           ; 1 bytes @ 0xF
   504  002F                     	ds	1
   505  0030                     ??_Lcd_Print_String:
   506  0030                     ?___awmod:	
   507                           ; 1 bytes @ 0x10
   508                           
   509  0030                     Lcd_Set_Cursor@y:	
   510                           ; 2 bytes @ 0x10
   511                           
   512  0030                     Lcd_Print_String@i:	
   513                           ; 1 bytes @ 0x10
   514                           
   515  0030                     ___awmod@divisor:	
   516                           ; 2 bytes @ 0x10
   517                           
   518                           
   519                           ; 2 bytes @ 0x10
   520  0030                     	ds	1
   521  0031                     Lcd_Set_Cursor@temp:
   522                           
   523                           ; 1 bytes @ 0x11
   524  0031                     	ds	1
   525  0032                     Lcd_Print_String@a:
   526  0032                     ___awmod@dividend:	
   527                           ; 1 bytes @ 0x12
   528                           
   529                           
   530                           ; 2 bytes @ 0x12
   531  0032                     	ds	2
   532  0034                     ??___awmod:
   533                           
   534                           ; 1 bytes @ 0x14
   535  0034                     	ds	1
   536  0035                     ___awmod@counter:
   537                           
   538                           ; 1 bytes @ 0x15
   539  0035                     	ds	1
   540  0036                     ___awmod@sign:
   541                           
   542                           ; 1 bytes @ 0x16
   543  0036                     	ds	1
   544  0037                     ??_main:
   545                           
   546                           ; 1 bytes @ 0x17
   547  0037                     	ds	3
   548                           
   549                           	psect	maintext
   550  0021                     __pmaintext:	
   551 ;;
   552 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   553 ;;
   554 ;; *************** function _main *****************
   555 ;; Defined at:
   556 ;;		line 32 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : B00/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0
   572 ;;      Temps:          0       3       0       0       0
   573 ;;      Totals:         0       3       0       0       0
   574 ;;Total ram usage:        3 bytes
   575 ;; Hardware stack levels required when called:    7
   576 ;; This function calls:
   577 ;;		_Lcd_Print_Char
   578 ;;		_Lcd_Print_String
   579 ;;		_Lcd_Set_Cursor
   580 ;;		_Lcd_Start
   581 ;;		___awdiv
   582 ;;		___awmod
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _main
   590  0021                     _main:
   591  0021                     l1307:	
   592                           ;incstack = 0
   593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   594                           
   595                           
   596                           ;main.c: 33:     TRISD = 0x00;
   597  0021  1683               	bsf	3,5	;RP0=1, select bank1
   598  0022  1303               	bcf	3,6	;RP1=0, select bank1
   599  0023  0188               	clrf	8	;volatile
   600  0024                     l1309:
   601                           
   602                           ;main.c: 34:     TRISBbits.TRISB0 = 1;
   603  0024  1406               	bsf	6,0	;volatile
   604                           
   605                           ;main.c: 36:     OPTION_REG = 0b00000000;
   606  0025  0181               	clrf	1	;volatile
   607  0026                     l1311:
   608                           
   609                           ;main.c: 37:     INTCONbits.GIE = 1;
   610  0026  178B               	bsf	11,7	;volatile
   611  0027                     l1313:
   612                           
   613                           ;main.c: 38:     INTCONbits.PEIE = 1;
   614  0027  170B               	bsf	11,6	;volatile
   615  0028                     l1315:
   616                           
   617                           ;main.c: 39:     INTCONbits.INTE = 1;
   618  0028  160B               	bsf	11,4	;volatile
   619  0029                     l1317:
   620                           
   621                           ;main.c: 41:     Lcd_Start();
   622  0029  120A  118A  228C  120A  118A  	fcall	_Lcd_Start
   623  002E                     l1319:
   624                           
   625                           ;main.c: 44:         ch1 = (number/1000)%10;
   626  002E  300A               	movlw	10
   627  002F  1283               	bcf	3,5	;RP0=0, select bank0
   628  0030  1303               	bcf	3,6	;RP1=0, select bank0
   629  0031  00B0               	movwf	___awmod@divisor
   630  0032  3000               	movlw	0
   631  0033  00B1               	movwf	___awmod@divisor+1
   632  0034  30E8               	movlw	232
   633  0035  00A7               	movwf	___awdiv@divisor
   634  0036  3003               	movlw	3
   635  0037  00A8               	movwf	___awdiv@divisor+1
   636  0038  083B               	movf	_number+1,w
   637  0039  00AA               	movwf	___awdiv@dividend+1
   638  003A  083A               	movf	_number,w
   639  003B  00A9               	movwf	___awdiv@dividend
   640  003C  120A  118A  2106  120A  118A  	fcall	___awdiv
   641  0041  1283               	bcf	3,5	;RP0=0, select bank0
   642  0042  1303               	bcf	3,6	;RP1=0, select bank0
   643  0043  0828               	movf	?___awdiv+1,w
   644  0044  00B3               	movwf	___awmod@dividend+1
   645  0045  0827               	movf	?___awdiv,w
   646  0046  00B2               	movwf	___awmod@dividend
   647  0047  120A  118A  2231  120A  118A  	fcall	___awmod
   648  004C  1283               	bcf	3,5	;RP0=0, select bank0
   649  004D  1303               	bcf	3,6	;RP1=0, select bank0
   650  004E  0830               	movf	?___awmod,w
   651  004F  00B7               	movwf	??_main
   652  0050  0837               	movf	??_main,w
   653  0051  00BF               	movwf	_ch1
   654  0052                     l1321:
   655                           
   656                           ;main.c: 45:         ch2 = (number/100)%10;
   657  0052  300A               	movlw	10
   658  0053  00B0               	movwf	___awmod@divisor
   659  0054  3000               	movlw	0
   660  0055  00B1               	movwf	___awmod@divisor+1
   661  0056  3064               	movlw	100
   662  0057  00A7               	movwf	___awdiv@divisor
   663  0058  3000               	movlw	0
   664  0059  00A8               	movwf	___awdiv@divisor+1
   665  005A  083B               	movf	_number+1,w
   666  005B  00AA               	movwf	___awdiv@dividend+1
   667  005C  083A               	movf	_number,w
   668  005D  00A9               	movwf	___awdiv@dividend
   669  005E  120A  118A  2106  120A  118A  	fcall	___awdiv
   670  0063  1283               	bcf	3,5	;RP0=0, select bank0
   671  0064  1303               	bcf	3,6	;RP1=0, select bank0
   672  0065  0828               	movf	?___awdiv+1,w
   673  0066  00B3               	movwf	___awmod@dividend+1
   674  0067  0827               	movf	?___awdiv,w
   675  0068  00B2               	movwf	___awmod@dividend
   676  0069  120A  118A  2231  120A  118A  	fcall	___awmod
   677  006E  1283               	bcf	3,5	;RP0=0, select bank0
   678  006F  1303               	bcf	3,6	;RP1=0, select bank0
   679  0070  0830               	movf	?___awmod,w
   680  0071  00B7               	movwf	??_main
   681  0072  0837               	movf	??_main,w
   682  0073  00BE               	movwf	_ch2
   683  0074                     l1323:
   684                           
   685                           ;main.c: 46:         ch3 = (number/10)%10;
   686  0074  300A               	movlw	10
   687  0075  00B0               	movwf	___awmod@divisor
   688  0076  3000               	movlw	0
   689  0077  00B1               	movwf	___awmod@divisor+1
   690  0078  300A               	movlw	10
   691  0079  00A7               	movwf	___awdiv@divisor
   692  007A  3000               	movlw	0
   693  007B  00A8               	movwf	___awdiv@divisor+1
   694  007C  083B               	movf	_number+1,w
   695  007D  00AA               	movwf	___awdiv@dividend+1
   696  007E  083A               	movf	_number,w
   697  007F  00A9               	movwf	___awdiv@dividend
   698  0080  120A  118A  2106  120A  118A  	fcall	___awdiv
   699  0085  1283               	bcf	3,5	;RP0=0, select bank0
   700  0086  1303               	bcf	3,6	;RP1=0, select bank0
   701  0087  0828               	movf	?___awdiv+1,w
   702  0088  00B3               	movwf	___awmod@dividend+1
   703  0089  0827               	movf	?___awdiv,w
   704  008A  00B2               	movwf	___awmod@dividend
   705  008B  120A  118A  2231  120A  118A  	fcall	___awmod
   706  0090  1283               	bcf	3,5	;RP0=0, select bank0
   707  0091  1303               	bcf	3,6	;RP1=0, select bank0
   708  0092  0830               	movf	?___awmod,w
   709  0093  00B7               	movwf	??_main
   710  0094  0837               	movf	??_main,w
   711  0095  00BD               	movwf	_ch3
   712  0096                     l1325:
   713                           
   714                           ;main.c: 47:         ch4 = (number/1)%10;
   715  0096  300A               	movlw	10
   716  0097  00B0               	movwf	___awmod@divisor
   717  0098  3000               	movlw	0
   718  0099  00B1               	movwf	___awmod@divisor+1
   719  009A  083B               	movf	_number+1,w
   720  009B  00B3               	movwf	___awmod@dividend+1
   721  009C  083A               	movf	_number,w
   722  009D  00B2               	movwf	___awmod@dividend
   723  009E  120A  118A  2231  120A  118A  	fcall	___awmod
   724  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   725  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   726  00A5  0830               	movf	?___awmod,w
   727  00A6  00B7               	movwf	??_main
   728  00A7  0837               	movf	??_main,w
   729  00A8  00BC               	movwf	_ch4
   730  00A9                     l1327:
   731                           
   732                           ;main.c: 49:         Lcd_Set_Cursor(2,1);
   733  00A9  01AB               	clrf	Lcd_Set_Cursor@b
   734  00AA  0AAB               	incf	Lcd_Set_Cursor@b,f
   735  00AB  3002               	movlw	2
   736  00AC  120A  118A  22E5  120A  118A  	fcall	_Lcd_Set_Cursor
   737  00B1                     l1329:
   738                           
   739                           ;main.c: 50:         Lcd_Print_String("Inside Main Loop");
   740  00B1  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   741  00B2  120A  118A  2440  120A  118A  	fcall	_Lcd_Print_String
   742  00B7                     l1331:
   743                           
   744                           ;main.c: 51:         Lcd_Set_Cursor(1,1);
   745  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   746  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   747  00B9  01AB               	clrf	Lcd_Set_Cursor@b
   748  00BA  0AAB               	incf	Lcd_Set_Cursor@b,f
   749  00BB  3001               	movlw	1
   750  00BC  120A  118A  22E5  120A  118A  	fcall	_Lcd_Set_Cursor
   751  00C1                     l1333:
   752                           
   753                           ;main.c: 52:         Lcd_Print_String("Number: ");
   754  00C1  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   755  00C2  120A  118A  2440  120A  118A  	fcall	_Lcd_Print_String
   756  00C7                     l1335:
   757                           
   758                           ;main.c: 53:         Lcd_Print_Char(ch1+'0');
   759  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   760  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   761  00C9  083F               	movf	_ch1,w
   762  00CA  3E30               	addlw	48
   763  00CB  120A  118A  216F  120A  118A  	fcall	_Lcd_Print_Char
   764  00D0                     l1337:
   765                           
   766                           ;main.c: 54:         Lcd_Print_Char(ch2+'0');
   767  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   768  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   769  00D2  083E               	movf	_ch2,w
   770  00D3  3E30               	addlw	48
   771  00D4  120A  118A  216F  120A  118A  	fcall	_Lcd_Print_Char
   772  00D9                     l1339:
   773                           
   774                           ;main.c: 55:         Lcd_Print_Char(ch3+'0');
   775  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   776  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   777  00DB  083D               	movf	_ch3,w
   778  00DC  3E30               	addlw	48
   779  00DD  120A  118A  216F  120A  118A  	fcall	_Lcd_Print_Char
   780  00E2                     l1341:
   781                           
   782                           ;main.c: 56:         Lcd_Print_Char(ch4+'0');
   783  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   784  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   785  00E4  083C               	movf	_ch4,w
   786  00E5  3E30               	addlw	48
   787  00E6  120A  118A  216F  120A  118A  	fcall	_Lcd_Print_Char
   788  00EB                     l1343:
   789                           
   790                           ;main.c: 58:         _delay((unsigned long)((500)*(20000000/4000.0)));
   791  00EB  300D               	movlw	13
   792  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   793  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   794  00EE  00B9               	movwf	??_main+2
   795  00EF  30AF               	movlw	175
   796  00F0  00B8               	movwf	??_main+1
   797  00F1  30B5               	movlw	181
   798  00F2  00B7               	movwf	??_main
   799  00F3                     u897:
   800  00F3  0BB7               	decfsz	??_main,f
   801  00F4  28F3               	goto	u897
   802  00F5  0BB8               	decfsz	??_main+1,f
   803  00F6  28F3               	goto	u897
   804  00F7  0BB9               	decfsz	??_main+2,f
   805  00F8  28F3               	goto	u897
   806  00F9  28FA               	nop2
   807  00FA                     l1345:
   808                           
   809                           ;main.c: 59:         number++;
   810  00FA  3001               	movlw	1
   811  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   812  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   813  00FD  07BA               	addwf	_number,f
   814  00FE  1803               	skipnc
   815  00FF  0ABB               	incf	_number+1,f
   816  0100  3000               	movlw	0
   817  0101  07BB               	addwf	_number+1,f
   818  0102  282E               	goto	l1319
   819  0103  120A  118A  2812   	ljmp	start
   820  0106                     __end_of_main:
   821                           
   822                           	psect	text1
   823  0231                     __ptext1:	
   824 ;; *************** function ___awmod *****************
   825 ;; Defined at:
   826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  divisor         2   16[BANK0 ] int 
   829 ;;  dividend        2   18[BANK0 ] int 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  sign            1   22[BANK0 ] unsigned char 
   832 ;;  counter         1   21[BANK0 ] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  2   16[BANK0 ] int 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       4       0       0       0
   843 ;;      Locals:         0       2       0       0       0
   844 ;;      Temps:          0       1       0       0       0
   845 ;;      Totals:         0       7       0       0       0
   846 ;;Total ram usage:        7 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    4
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function ___awmod
   858  0231                     ___awmod:
   859  0231                     l1227:	
   860                           ;incstack = 0
   861                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   862                           
   863  0231  1283               	bcf	3,5	;RP0=0, select bank0
   864  0232  1303               	bcf	3,6	;RP1=0, select bank0
   865  0233  01B6               	clrf	___awmod@sign
   866  0234                     l1229:
   867  0234  1FB3               	btfss	___awmod@dividend+1,7
   868  0235  2A37               	goto	u741
   869  0236  2A38               	goto	u740
   870  0237                     u741:
   871  0237  2A3F               	goto	l1235
   872  0238                     u740:
   873  0238                     l1231:
   874  0238  09B2               	comf	___awmod@dividend,f
   875  0239  09B3               	comf	___awmod@dividend+1,f
   876  023A  0AB2               	incf	___awmod@dividend,f
   877  023B  1903               	skipnz
   878  023C  0AB3               	incf	___awmod@dividend+1,f
   879  023D                     l1233:
   880  023D  01B6               	clrf	___awmod@sign
   881  023E  0AB6               	incf	___awmod@sign,f
   882  023F                     l1235:
   883  023F  1FB1               	btfss	___awmod@divisor+1,7
   884  0240  2A42               	goto	u751
   885  0241  2A43               	goto	u750
   886  0242                     u751:
   887  0242  2A48               	goto	l1239
   888  0243                     u750:
   889  0243                     l1237:
   890  0243  09B0               	comf	___awmod@divisor,f
   891  0244  09B1               	comf	___awmod@divisor+1,f
   892  0245  0AB0               	incf	___awmod@divisor,f
   893  0246  1903               	skipnz
   894  0247  0AB1               	incf	___awmod@divisor+1,f
   895  0248                     l1239:
   896  0248  0830               	movf	___awmod@divisor,w
   897  0249  0431               	iorwf	___awmod@divisor+1,w
   898  024A  1903               	btfsc	3,2
   899  024B  2A4D               	goto	u761
   900  024C  2A4E               	goto	u760
   901  024D                     u761:
   902  024D  2A7D               	goto	l1257
   903  024E                     u760:
   904  024E                     l1241:
   905  024E  01B5               	clrf	___awmod@counter
   906  024F  0AB5               	incf	___awmod@counter,f
   907  0250  2A5C               	goto	l1247
   908  0251                     l1243:
   909  0251  3001               	movlw	1
   910  0252                     u775:
   911  0252  1003               	clrc
   912  0253  0DB0               	rlf	___awmod@divisor,f
   913  0254  0DB1               	rlf	___awmod@divisor+1,f
   914  0255  3EFF               	addlw	-1
   915  0256  1D03               	skipz
   916  0257  2A52               	goto	u775
   917  0258                     l1245:
   918  0258  3001               	movlw	1
   919  0259  00B4               	movwf	??___awmod
   920  025A  0834               	movf	??___awmod,w
   921  025B  07B5               	addwf	___awmod@counter,f
   922  025C                     l1247:
   923  025C  1FB1               	btfss	___awmod@divisor+1,7
   924  025D  2A5F               	goto	u781
   925  025E  2A60               	goto	u780
   926  025F                     u781:
   927  025F  2A51               	goto	l1243
   928  0260                     u780:
   929  0260                     l1249:
   930  0260  0831               	movf	___awmod@divisor+1,w
   931  0261  0233               	subwf	___awmod@dividend+1,w
   932  0262  1D03               	skipz
   933  0263  2A66               	goto	u795
   934  0264  0830               	movf	___awmod@divisor,w
   935  0265  0232               	subwf	___awmod@dividend,w
   936  0266                     u795:
   937  0266  1C03               	skipc
   938  0267  2A69               	goto	u791
   939  0268  2A6A               	goto	u790
   940  0269                     u791:
   941  0269  2A70               	goto	l1253
   942  026A                     u790:
   943  026A                     l1251:
   944  026A  0830               	movf	___awmod@divisor,w
   945  026B  02B2               	subwf	___awmod@dividend,f
   946  026C  0831               	movf	___awmod@divisor+1,w
   947  026D  1C03               	skipc
   948  026E  03B3               	decf	___awmod@dividend+1,f
   949  026F  02B3               	subwf	___awmod@dividend+1,f
   950  0270                     l1253:
   951  0270  3001               	movlw	1
   952  0271                     u805:
   953  0271  1003               	clrc
   954  0272  0CB1               	rrf	___awmod@divisor+1,f
   955  0273  0CB0               	rrf	___awmod@divisor,f
   956  0274  3EFF               	addlw	-1
   957  0275  1D03               	skipz
   958  0276  2A71               	goto	u805
   959  0277                     l1255:
   960  0277  3001               	movlw	1
   961  0278  02B5               	subwf	___awmod@counter,f
   962  0279  1D03               	btfss	3,2
   963  027A  2A7C               	goto	u811
   964  027B  2A7D               	goto	u810
   965  027C                     u811:
   966  027C  2A60               	goto	l1249
   967  027D                     u810:
   968  027D                     l1257:
   969  027D  0836               	movf	___awmod@sign,w
   970  027E  1903               	btfsc	3,2
   971  027F  2A81               	goto	u821
   972  0280  2A82               	goto	u820
   973  0281                     u821:
   974  0281  2A87               	goto	l1261
   975  0282                     u820:
   976  0282                     l1259:
   977  0282  09B2               	comf	___awmod@dividend,f
   978  0283  09B3               	comf	___awmod@dividend+1,f
   979  0284  0AB2               	incf	___awmod@dividend,f
   980  0285  1903               	skipnz
   981  0286  0AB3               	incf	___awmod@dividend+1,f
   982  0287                     l1261:
   983  0287  0833               	movf	___awmod@dividend+1,w
   984  0288  00B1               	movwf	?___awmod+1
   985  0289  0832               	movf	___awmod@dividend,w
   986  028A  00B0               	movwf	?___awmod
   987  028B                     l343:
   988  028B  0008               	return
   989  028C                     __end_of___awmod:
   990                           
   991                           	psect	text2
   992  0106                     __ptext2:	
   993 ;; *************** function ___awdiv *****************
   994 ;; Defined at:
   995 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  divisor         2    7[BANK0 ] int 
   998 ;;  dividend        2    9[BANK0 ] int 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  quotient        2   14[BANK0 ] int 
  1001 ;;  sign            1   13[BANK0 ] unsigned char 
  1002 ;;  counter         1   12[BANK0 ] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2    7[BANK0 ] int 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       4       0       0       0
  1013 ;;      Locals:         0       4       0       0       0
  1014 ;;      Temps:          0       1       0       0       0
  1015 ;;      Totals:         0       9       0       0       0
  1016 ;;Total ram usage:        9 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    4
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function ___awdiv
  1028  0106                     ___awdiv:
  1029  0106                     l1183:	
  1030                           ;incstack = 0
  1031                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1032                           
  1033  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0108  01AD               	clrf	___awdiv@sign
  1036  0109                     l1185:
  1037  0109  1FA8               	btfss	___awdiv@divisor+1,7
  1038  010A  290C               	goto	u641
  1039  010B  290D               	goto	u640
  1040  010C                     u641:
  1041  010C  2914               	goto	l1191
  1042  010D                     u640:
  1043  010D                     l1187:
  1044  010D  09A7               	comf	___awdiv@divisor,f
  1045  010E  09A8               	comf	___awdiv@divisor+1,f
  1046  010F  0AA7               	incf	___awdiv@divisor,f
  1047  0110  1903               	skipnz
  1048  0111  0AA8               	incf	___awdiv@divisor+1,f
  1049  0112                     l1189:
  1050  0112  01AD               	clrf	___awdiv@sign
  1051  0113  0AAD               	incf	___awdiv@sign,f
  1052  0114                     l1191:
  1053  0114  1FAA               	btfss	___awdiv@dividend+1,7
  1054  0115  2917               	goto	u651
  1055  0116  2918               	goto	u650
  1056  0117                     u651:
  1057  0117  2921               	goto	l1197
  1058  0118                     u650:
  1059  0118                     l1193:
  1060  0118  09A9               	comf	___awdiv@dividend,f
  1061  0119  09AA               	comf	___awdiv@dividend+1,f
  1062  011A  0AA9               	incf	___awdiv@dividend,f
  1063  011B  1903               	skipnz
  1064  011C  0AAA               	incf	___awdiv@dividend+1,f
  1065  011D                     l1195:
  1066  011D  3001               	movlw	1
  1067  011E  00AB               	movwf	??___awdiv
  1068  011F  082B               	movf	??___awdiv,w
  1069  0120  06AD               	xorwf	___awdiv@sign,f
  1070  0121                     l1197:
  1071  0121  01AE               	clrf	___awdiv@quotient
  1072  0122  01AF               	clrf	___awdiv@quotient+1
  1073  0123                     l1199:
  1074  0123  0827               	movf	___awdiv@divisor,w
  1075  0124  0428               	iorwf	___awdiv@divisor+1,w
  1076  0125  1903               	btfsc	3,2
  1077  0126  2928               	goto	u661
  1078  0127  2929               	goto	u660
  1079  0128                     u661:
  1080  0128  2960               	goto	l1219
  1081  0129                     u660:
  1082  0129                     l1201:
  1083  0129  01AC               	clrf	___awdiv@counter
  1084  012A  0AAC               	incf	___awdiv@counter,f
  1085  012B  2937               	goto	l1207
  1086  012C                     l1203:
  1087  012C  3001               	movlw	1
  1088  012D                     u675:
  1089  012D  1003               	clrc
  1090  012E  0DA7               	rlf	___awdiv@divisor,f
  1091  012F  0DA8               	rlf	___awdiv@divisor+1,f
  1092  0130  3EFF               	addlw	-1
  1093  0131  1D03               	skipz
  1094  0132  292D               	goto	u675
  1095  0133                     l1205:
  1096  0133  3001               	movlw	1
  1097  0134  00AB               	movwf	??___awdiv
  1098  0135  082B               	movf	??___awdiv,w
  1099  0136  07AC               	addwf	___awdiv@counter,f
  1100  0137                     l1207:
  1101  0137  1FA8               	btfss	___awdiv@divisor+1,7
  1102  0138  293A               	goto	u681
  1103  0139  293B               	goto	u680
  1104  013A                     u681:
  1105  013A  292C               	goto	l1203
  1106  013B                     u680:
  1107  013B                     l1209:
  1108  013B  3001               	movlw	1
  1109  013C                     u695:
  1110  013C  1003               	clrc
  1111  013D  0DAE               	rlf	___awdiv@quotient,f
  1112  013E  0DAF               	rlf	___awdiv@quotient+1,f
  1113  013F  3EFF               	addlw	-1
  1114  0140  1D03               	skipz
  1115  0141  293C               	goto	u695
  1116  0142  0828               	movf	___awdiv@divisor+1,w
  1117  0143  022A               	subwf	___awdiv@dividend+1,w
  1118  0144  1D03               	skipz
  1119  0145  2948               	goto	u705
  1120  0146  0827               	movf	___awdiv@divisor,w
  1121  0147  0229               	subwf	___awdiv@dividend,w
  1122  0148                     u705:
  1123  0148  1C03               	skipc
  1124  0149  294B               	goto	u701
  1125  014A  294C               	goto	u700
  1126  014B                     u701:
  1127  014B  2953               	goto	l1215
  1128  014C                     u700:
  1129  014C                     l1211:
  1130  014C  0827               	movf	___awdiv@divisor,w
  1131  014D  02A9               	subwf	___awdiv@dividend,f
  1132  014E  0828               	movf	___awdiv@divisor+1,w
  1133  014F  1C03               	skipc
  1134  0150  03AA               	decf	___awdiv@dividend+1,f
  1135  0151  02AA               	subwf	___awdiv@dividend+1,f
  1136  0152                     l1213:
  1137  0152  142E               	bsf	___awdiv@quotient,0
  1138  0153                     l1215:
  1139  0153  3001               	movlw	1
  1140  0154                     u715:
  1141  0154  1003               	clrc
  1142  0155  0CA8               	rrf	___awdiv@divisor+1,f
  1143  0156  0CA7               	rrf	___awdiv@divisor,f
  1144  0157  3EFF               	addlw	-1
  1145  0158  1D03               	skipz
  1146  0159  2954               	goto	u715
  1147  015A                     l1217:
  1148  015A  3001               	movlw	1
  1149  015B  02AC               	subwf	___awdiv@counter,f
  1150  015C  1D03               	btfss	3,2
  1151  015D  295F               	goto	u721
  1152  015E  2960               	goto	u720
  1153  015F                     u721:
  1154  015F  293B               	goto	l1209
  1155  0160                     u720:
  1156  0160                     l1219:
  1157  0160  082D               	movf	___awdiv@sign,w
  1158  0161  1903               	btfsc	3,2
  1159  0162  2964               	goto	u731
  1160  0163  2965               	goto	u730
  1161  0164                     u731:
  1162  0164  296A               	goto	l1223
  1163  0165                     u730:
  1164  0165                     l1221:
  1165  0165  09AE               	comf	___awdiv@quotient,f
  1166  0166  09AF               	comf	___awdiv@quotient+1,f
  1167  0167  0AAE               	incf	___awdiv@quotient,f
  1168  0168  1903               	skipnz
  1169  0169  0AAF               	incf	___awdiv@quotient+1,f
  1170  016A                     l1223:
  1171  016A  082F               	movf	___awdiv@quotient+1,w
  1172  016B  00A8               	movwf	?___awdiv+1
  1173  016C  082E               	movf	___awdiv@quotient,w
  1174  016D  00A7               	movwf	?___awdiv
  1175  016E                     l330:
  1176  016E  0008               	return
  1177  016F                     __end_of___awdiv:
  1178                           
  1179                           	psect	text3
  1180  028C                     __ptext3:	
  1181 ;; *************** function _Lcd_Start *****************
  1182 ;; Defined at:
  1183 ;;		line 71 in file "./lcd.h"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  i               2    0        int 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, pclath, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         0       0       0       0       0
  1198 ;;      Locals:         0       2       0       0       0
  1199 ;;      Temps:          0       2       0       0       0
  1200 ;;      Totals:         0       4       0       0       0
  1201 ;;Total ram usage:        4 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    6
  1204 ;; This function calls:
  1205 ;;		_Lcd_Cmd
  1206 ;;		_Lcd_SetBit
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _Lcd_Start
  1214  028C                     _Lcd_Start:
  1215  028C                     l1141:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  1218                           
  1219                           
  1220                           ;./lcd.h: 73:   Lcd_SetBit(0x00);
  1221  028C  3000               	movlw	0
  1222  028D  120A  118A  24B0  120A  118A  	fcall	_Lcd_SetBit
  1223  0292                     l1143:
  1224  0292                     l1145:
  1225  0292                     l1153:
  1226                           
  1227                           ;./lcd.h: 75:   Lcd_Cmd(0x03);
  1228  0292  3003               	movlw	3
  1229  0293  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1230  0298                     l1155:
  1231                           
  1232                           ;./lcd.h: 76:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1233  0298  3021               	movlw	33
  1234  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1235  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1236  029B  00AC               	movwf	??_Lcd_Start+1
  1237  029C  3075               	movlw	117
  1238  029D  00AB               	movwf	??_Lcd_Start
  1239  029E                     u907:
  1240  029E  0BAB               	decfsz	??_Lcd_Start,f
  1241  029F  2A9E               	goto	u907
  1242  02A0  0BAC               	decfsz	??_Lcd_Start+1,f
  1243  02A1  2A9E               	goto	u907
  1244  02A2  2AA3               	nop2
  1245  02A3                     l1157:
  1246                           
  1247                           ;./lcd.h: 77:   Lcd_Cmd(0x03);
  1248  02A3  3003               	movlw	3
  1249  02A4  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1250                           
  1251                           ;./lcd.h: 78:     _delay((unsigned long)((11)*(20000000/4000.0)));
  1252  02A9  3048               	movlw	72
  1253  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1254  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1255  02AC  00AC               	movwf	??_Lcd_Start+1
  1256  02AD  306B               	movlw	107
  1257  02AE  00AB               	movwf	??_Lcd_Start
  1258  02AF                     u917:
  1259  02AF  0BAB               	decfsz	??_Lcd_Start,f
  1260  02B0  2AAF               	goto	u917
  1261  02B1  0BAC               	decfsz	??_Lcd_Start+1,f
  1262  02B2  2AAF               	goto	u917
  1263  02B3  2AB4               	nop2
  1264  02B4                     l1159:
  1265                           
  1266                           ;./lcd.h: 79:   Lcd_Cmd(0x03);
  1267  02B4  3003               	movlw	3
  1268  02B5  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1269  02BA                     l1161:
  1270                           
  1271                           ;./lcd.h: 80:   Lcd_Cmd(0x02);
  1272  02BA  3002               	movlw	2
  1273  02BB  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1274  02C0                     l1163:
  1275                           
  1276                           ;./lcd.h: 81:   Lcd_Cmd(0x02);
  1277  02C0  3002               	movlw	2
  1278  02C1  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1279  02C6                     l1165:
  1280                           
  1281                           ;./lcd.h: 82:   Lcd_Cmd(0x08);
  1282  02C6  3008               	movlw	8
  1283  02C7  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1284  02CC                     l1167:
  1285                           
  1286                           ;./lcd.h: 83:   Lcd_Cmd(0x00);
  1287  02CC  3000               	movlw	0
  1288  02CD  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1289  02D2                     l1169:
  1290                           
  1291                           ;./lcd.h: 84:   Lcd_Cmd(0x0C);
  1292  02D2  300C               	movlw	12
  1293  02D3  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1294  02D8                     l1171:
  1295                           
  1296                           ;./lcd.h: 85:   Lcd_Cmd(0x00);
  1297  02D8  3000               	movlw	0
  1298  02D9  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1299  02DE                     l1173:
  1300                           
  1301                           ;./lcd.h: 86:   Lcd_Cmd(0x06);
  1302  02DE  3006               	movlw	6
  1303  02DF  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1304  02E4                     l54:
  1305  02E4  0008               	return
  1306  02E5                     __end_of_Lcd_Start:
  1307                           
  1308                           	psect	text4
  1309  02E5                     __ptext4:	
  1310 ;; *************** function _Lcd_Set_Cursor *****************
  1311 ;; Defined at:
  1312 ;;		line 50 in file "./lcd.h"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  a               1    wreg     unsigned char 
  1315 ;;  b               1   11[BANK0 ] unsigned char 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  a               1   14[BANK0 ] unsigned char 
  1318 ;;  temp            1   17[BANK0 ] unsigned char 
  1319 ;;  y               1   16[BANK0 ] unsigned char 
  1320 ;;  z               1   15[BANK0 ] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0, pclath, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       1       0       0       0
  1331 ;;      Locals:         0       4       0       0       0
  1332 ;;      Temps:          0       2       0       0       0
  1333 ;;      Totals:         0       7       0       0       0
  1334 ;;Total ram usage:        7 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    6
  1337 ;; This function calls:
  1338 ;;		_Lcd_Cmd
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _Lcd_Set_Cursor
  1346  02E5                     _Lcd_Set_Cursor:
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1350                           ;Lcd_Set_Cursor@a stored from wreg
  1351  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1352  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1353  02E7  00AE               	movwf	Lcd_Set_Cursor@a
  1354  02E8                     l1121:
  1355                           
  1356                           ;./lcd.h: 50: void Lcd_Set_Cursor(char a, char b);./lcd.h: 51: {;./lcd.h: 52:     char t
      +                          emp,z,y;;./lcd.h: 53:     if(a== 1)
  1357  02E8  032E               	decf	Lcd_Set_Cursor@a,w
  1358  02E9  1D03               	btfss	3,2
  1359  02EA  2AEC               	goto	u591
  1360  02EB  2AED               	goto	u590
  1361  02EC                     u591:
  1362  02EC  2B12               	goto	l1131
  1363  02ED                     u590:
  1364  02ED                     l1123:
  1365                           
  1366                           ;./lcd.h: 54:     {;./lcd.h: 55:       temp = 0x80 + b - 1;
  1367  02ED  082B               	movf	Lcd_Set_Cursor@b,w
  1368  02EE  3E7F               	addlw	127
  1369  02EF  00AC               	movwf	??_Lcd_Set_Cursor
  1370  02F0  082C               	movf	??_Lcd_Set_Cursor,w
  1371  02F1  00B1               	movwf	Lcd_Set_Cursor@temp
  1372                           
  1373                           ;./lcd.h: 56:         z = temp>>4;
  1374  02F2  0831               	movf	Lcd_Set_Cursor@temp,w
  1375  02F3  00AC               	movwf	??_Lcd_Set_Cursor
  1376  02F4  3004               	movlw	4
  1377  02F5                     u605:
  1378  02F5  1003               	clrc
  1379  02F6  0CAC               	rrf	??_Lcd_Set_Cursor,f
  1380  02F7  3EFF               	addlw	-1
  1381  02F8  1D03               	skipz
  1382  02F9  2AF5               	goto	u605
  1383  02FA  082C               	movf	??_Lcd_Set_Cursor,w
  1384  02FB  00AD               	movwf	??_Lcd_Set_Cursor+1
  1385  02FC  082D               	movf	??_Lcd_Set_Cursor+1,w
  1386  02FD  00AF               	movwf	Lcd_Set_Cursor@z
  1387  02FE                     l1125:
  1388                           
  1389                           ;./lcd.h: 57:         y = temp & 0x0F;
  1390  02FE  0831               	movf	Lcd_Set_Cursor@temp,w
  1391  02FF  390F               	andlw	15
  1392  0300  00AC               	movwf	??_Lcd_Set_Cursor
  1393  0301  082C               	movf	??_Lcd_Set_Cursor,w
  1394  0302  00B0               	movwf	Lcd_Set_Cursor@y
  1395  0303                     l1127:
  1396                           
  1397                           ;./lcd.h: 58:         Lcd_Cmd(z);
  1398  0303  082F               	movf	Lcd_Set_Cursor@z,w
  1399  0304  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1400  0309                     l1129:
  1401                           
  1402                           ;./lcd.h: 59:         Lcd_Cmd(y);
  1403  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1404  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1405  030B  0830               	movf	Lcd_Set_Cursor@y,w
  1406  030C  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1407                           
  1408                           ;./lcd.h: 60:     }
  1409  0311  2B3C               	goto	l49
  1410  0312                     l1131:
  1411  0312  3002               	movlw	2
  1412  0313  062E               	xorwf	Lcd_Set_Cursor@a,w
  1413  0314  1D03               	btfss	3,2
  1414  0315  2B17               	goto	u611
  1415  0316  2B18               	goto	u610
  1416  0317                     u611:
  1417  0317  2B3C               	goto	l49
  1418  0318                     u610:
  1419  0318                     l1133:
  1420                           
  1421                           ;./lcd.h: 62:     {;./lcd.h: 63:         temp = 0xC0 + b - 1;
  1422  0318  082B               	movf	Lcd_Set_Cursor@b,w
  1423  0319  3EBF               	addlw	191
  1424  031A  00AC               	movwf	??_Lcd_Set_Cursor
  1425  031B  082C               	movf	??_Lcd_Set_Cursor,w
  1426  031C  00B1               	movwf	Lcd_Set_Cursor@temp
  1427                           
  1428                           ;./lcd.h: 64:         z = temp>>4;
  1429  031D  0831               	movf	Lcd_Set_Cursor@temp,w
  1430  031E  00AC               	movwf	??_Lcd_Set_Cursor
  1431  031F  3004               	movlw	4
  1432  0320                     u625:
  1433  0320  1003               	clrc
  1434  0321  0CAC               	rrf	??_Lcd_Set_Cursor,f
  1435  0322  3EFF               	addlw	-1
  1436  0323  1D03               	skipz
  1437  0324  2B20               	goto	u625
  1438  0325  082C               	movf	??_Lcd_Set_Cursor,w
  1439  0326  00AD               	movwf	??_Lcd_Set_Cursor+1
  1440  0327  082D               	movf	??_Lcd_Set_Cursor+1,w
  1441  0328  00AF               	movwf	Lcd_Set_Cursor@z
  1442  0329                     l1135:
  1443                           
  1444                           ;./lcd.h: 65:         y = temp & 0x0F;
  1445  0329  0831               	movf	Lcd_Set_Cursor@temp,w
  1446  032A  390F               	andlw	15
  1447  032B  00AC               	movwf	??_Lcd_Set_Cursor
  1448  032C  082C               	movf	??_Lcd_Set_Cursor,w
  1449  032D  00B0               	movwf	Lcd_Set_Cursor@y
  1450  032E                     l1137:
  1451                           
  1452                           ;./lcd.h: 66:         Lcd_Cmd(z);
  1453  032E  082F               	movf	Lcd_Set_Cursor@z,w
  1454  032F  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1455  0334                     l1139:
  1456                           
  1457                           ;./lcd.h: 67:         Lcd_Cmd(y);
  1458  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0336  0830               	movf	Lcd_Set_Cursor@y,w
  1461  0337  120A  118A  24D0  120A  118A  	fcall	_Lcd_Cmd
  1462  033C                     l49:
  1463  033C  0008               	return
  1464  033D                     __end_of_Lcd_Set_Cursor:
  1465                           
  1466                           	psect	text5
  1467  04D0                     __ptext5:	
  1468 ;; *************** function _Lcd_Cmd *****************
  1469 ;; Defined at:
  1470 ;;		line 35 in file "./lcd.h"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  a               1    wreg     unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  a               1   10[BANK0 ] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0, pclath, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       0       0       0
  1485 ;;      Locals:         0       1       0       0       0
  1486 ;;      Temps:          0       2       0       0       0
  1487 ;;      Totals:         0       3       0       0       0
  1488 ;;Total ram usage:        3 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    5
  1491 ;; This function calls:
  1492 ;;		_Lcd_SetBit
  1493 ;; This function is called by:
  1494 ;;		_Lcd_Set_Cursor
  1495 ;;		_Lcd_Start
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _Lcd_Cmd
  1501  04D0                     _Lcd_Cmd:
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1505                           ;Lcd_Cmd@a stored from wreg
  1506  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  1507  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  1508  04D2  00AA               	movwf	Lcd_Cmd@a
  1509  04D3                     l1035:
  1510                           
  1511                           ;./lcd.h: 35: void Lcd_Cmd(char a);./lcd.h: 36: {;./lcd.h: 37:     RD2 = 0;
  1512  04D3  1108               	bcf	8,2	;volatile
  1513  04D4                     l1037:
  1514                           
  1515                           ;./lcd.h: 38:     Lcd_SetBit(a);
  1516  04D4  082A               	movf	Lcd_Cmd@a,w
  1517  04D5  120A  118A  24B0  120A  118A  	fcall	_Lcd_SetBit
  1518  04DA                     l1039:
  1519                           
  1520                           ;./lcd.h: 39:     RD3 = 1;
  1521  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1522  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1523  04DC  1588               	bsf	8,3	;volatile
  1524  04DD                     l1041:
  1525                           
  1526                           ;./lcd.h: 40:         _delay((unsigned long)((4)*(20000000/4000.0)));
  1527  04DD  301A               	movlw	26
  1528  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1529  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1530  04E0  00A9               	movwf	??_Lcd_Cmd+1
  1531  04E1  30F7               	movlw	247
  1532  04E2  00A8               	movwf	??_Lcd_Cmd
  1533  04E3                     u927:
  1534  04E3  0BA8               	decfsz	??_Lcd_Cmd,f
  1535  04E4  2CE3               	goto	u927
  1536  04E5  0BA9               	decfsz	??_Lcd_Cmd+1,f
  1537  04E6  2CE3               	goto	u927
  1538  04E7  2CE8               	nop2
  1539  04E8                     l1043:
  1540                           
  1541                           ;./lcd.h: 41:         RD3 = 0;
  1542  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1543  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1544  04EA  1188               	bcf	8,3	;volatile
  1545  04EB                     l40:
  1546  04EB  0008               	return
  1547  04EC                     __end_of_Lcd_Cmd:
  1548                           
  1549                           	psect	text6
  1550  0440                     __ptext6:	
  1551 ;; *************** function _Lcd_Print_String *****************
  1552 ;; Defined at:
  1553 ;;		line 105 in file "./lcd.h"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  a               1    wreg     PTR unsigned char 
  1556 ;;		 -> STR_4(9), STR_3(17), STR_2(16), STR_1(16), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  a               1   18[BANK0 ] PTR unsigned char 
  1559 ;;		 -> STR_4(9), STR_3(17), STR_2(16), STR_1(16), 
  1560 ;;  i               2   16[BANK0 ] int 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       0       0       0       0
  1571 ;;      Locals:         0       3       0       0       0
  1572 ;;      Temps:          0       0       0       0       0
  1573 ;;      Totals:         0       3       0       0       0
  1574 ;;Total ram usage:        3 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    6
  1577 ;; This function calls:
  1578 ;;		_Lcd_Print_Char
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _Lcd_Print_String
  1586  0440                     _Lcd_Print_String:
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1590                           ;Lcd_Print_String@a stored from wreg
  1591  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0442  00B2               	movwf	Lcd_Print_String@a
  1594  0443                     l1175:
  1595                           
  1596                           ;./lcd.h: 105: void Lcd_Print_String(char *a);./lcd.h: 106: {;./lcd.h: 107:     int i;;.
      +                          /lcd.h: 108:     for(i=0;a[i]!='\0';i++)
  1597  0443  01B0               	clrf	Lcd_Print_String@i
  1598  0444  01B1               	clrf	Lcd_Print_String@i+1
  1599  0445  2C5B               	goto	l1181
  1600  0446                     l1177:
  1601                           
  1602                           ;./lcd.h: 109:        Lcd_Print_Char(a[i]);
  1603  0446  0830               	movf	Lcd_Print_String@i,w
  1604  0447  0732               	addwf	Lcd_Print_String@a,w
  1605  0448  0084               	movwf	4
  1606  0449  120A  118A  2400  120A  118A  	fcall	stringdir
  1607  044E  120A  118A  216F  120A  118A  	fcall	_Lcd_Print_Char
  1608  0453                     l1179:
  1609  0453  3001               	movlw	1
  1610  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0456  07B0               	addwf	Lcd_Print_String@i,f
  1613  0457  1803               	skipnc
  1614  0458  0AB1               	incf	Lcd_Print_String@i+1,f
  1615  0459  3000               	movlw	0
  1616  045A  07B1               	addwf	Lcd_Print_String@i+1,f
  1617  045B                     l1181:
  1618  045B  0830               	movf	Lcd_Print_String@i,w
  1619  045C  0732               	addwf	Lcd_Print_String@a,w
  1620  045D  0084               	movwf	4
  1621  045E  120A  118A  2400  120A  118A  	fcall	stringdir
  1622  0463  3A00               	xorlw	0
  1623  0464  1D03               	skipz
  1624  0465  2C67               	goto	u631
  1625  0466  2C68               	goto	u630
  1626  0467                     u631:
  1627  0467  2C46               	goto	l1177
  1628  0468                     u630:
  1629  0468                     l67:
  1630  0468  0008               	return
  1631  0469                     __end_of_Lcd_Print_String:
  1632                           
  1633                           	psect	text7
  1634  016F                     __ptext7:	
  1635 ;; *************** function _Lcd_Print_Char *****************
  1636 ;; Defined at:
  1637 ;;		line 89 in file "./lcd.h"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  data            1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  data            1   11[BANK0 ] unsigned char 
  1642 ;;  i               2   14[BANK0 ] int 
  1643 ;;  i               2   12[BANK0 ] int 
  1644 ;;  Upper_Nibble    1   10[BANK0 ] unsigned char 
  1645 ;;  Lower_Nibble    1    9[BANK0 ] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       0       0       0       0
  1656 ;;      Locals:         0       7       0       0       0
  1657 ;;      Temps:          0       1       0       0       0
  1658 ;;      Totals:         0       8       0       0       0
  1659 ;;Total ram usage:        8 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    5
  1662 ;; This function calls:
  1663 ;;		_Lcd_SetBit
  1664 ;; This function is called by:
  1665 ;;		_Lcd_Print_String
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function _Lcd_Print_Char
  1672  016F                     _Lcd_Print_Char:
  1673                           
  1674                           ;incstack = 0
  1675                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1676                           ;Lcd_Print_Char@data stored from wreg
  1677  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0171  00AB               	movwf	Lcd_Print_Char@data
  1680  0172                     l1045:
  1681                           
  1682                           ;./lcd.h: 89: void Lcd_Print_Char(char data);./lcd.h: 90: {;./lcd.h: 91:    char Lower_N
      +                          ibble,Upper_Nibble;;./lcd.h: 92:    Lower_Nibble = data&0x0F;
  1683  0172  082B               	movf	Lcd_Print_Char@data,w
  1684  0173  390F               	andlw	15
  1685  0174  00A8               	movwf	??_Lcd_Print_Char
  1686  0175  0828               	movf	??_Lcd_Print_Char,w
  1687  0176  00A9               	movwf	Lcd_Print_Char@Lower_Nibble
  1688                           
  1689                           ;./lcd.h: 93:    Upper_Nibble = data&0xF0;
  1690  0177  082B               	movf	Lcd_Print_Char@data,w
  1691  0178  39F0               	andlw	240
  1692  0179  00A8               	movwf	??_Lcd_Print_Char
  1693  017A  0828               	movf	??_Lcd_Print_Char,w
  1694  017B  00AA               	movwf	Lcd_Print_Char@Upper_Nibble
  1695  017C                     l1047:
  1696                           
  1697                           ;./lcd.h: 94:    RD2 = 1;
  1698  017C  1508               	bsf	8,2	;volatile
  1699  017D                     l1049:
  1700                           
  1701                           ;./lcd.h: 95:    Lcd_SetBit(Upper_Nibble>>4);
  1702  017D  082A               	movf	Lcd_Print_Char@Upper_Nibble,w
  1703  017E  00A8               	movwf	??_Lcd_Print_Char
  1704  017F  3004               	movlw	4
  1705  0180                     u535:
  1706  0180  1003               	clrc
  1707  0181  0CA8               	rrf	??_Lcd_Print_Char,f
  1708  0182  3EFF               	addlw	-1
  1709  0183  1D03               	skipz
  1710  0184  2980               	goto	u535
  1711  0185  0828               	movf	??_Lcd_Print_Char,w
  1712  0186  120A  118A  24B0  120A  118A  	fcall	_Lcd_SetBit
  1713  018B                     l1051:
  1714                           
  1715                           ;./lcd.h: 96:    RD3 = 1;
  1716  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1717  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1718  018D  1588               	bsf	8,3	;volatile
  1719  018E                     l1053:
  1720                           
  1721                           ;./lcd.h: 97:    for(int i=2130483; i<=0; i--) __nop();
  1722  018E  3033               	movlw	51
  1723  018F  00AC               	movwf	Lcd_Print_Char@i
  1724  0190  3082               	movlw	130
  1725  0191  00AD               	movwf	Lcd_Print_Char@i+1
  1726  0192                     l57:
  1727  0192  0000               	nop
  1728  0193                     l1059:
  1729  0193  30FF               	movlw	255
  1730  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0196  07AC               	addwf	Lcd_Print_Char@i,f
  1733  0197  1803               	skipnc
  1734  0198  0AAD               	incf	Lcd_Print_Char@i+1,f
  1735  0199  30FF               	movlw	255
  1736  019A  07AD               	addwf	Lcd_Print_Char@i+1,f
  1737  019B                     l1061:
  1738  019B  082D               	movf	Lcd_Print_Char@i+1,w
  1739  019C  3A80               	xorlw	128
  1740  019D  00FF               	movwf	btemp+1
  1741  019E  3080               	movlw	128
  1742  019F  027F               	subwf	btemp+1,w
  1743  01A0  1D03               	skipz
  1744  01A1  29A4               	goto	u545
  1745  01A2  3001               	movlw	1
  1746  01A3  022C               	subwf	Lcd_Print_Char@i,w
  1747  01A4                     u545:
  1748  01A4  1C03               	skipc
  1749  01A5  29A7               	goto	u541
  1750  01A6  29A8               	goto	u540
  1751  01A7                     u541:
  1752  01A7  2992               	goto	l57
  1753  01A8                     u540:
  1754  01A8                     l58:
  1755                           
  1756                           ;./lcd.h: 98:    RD3 = 0;
  1757  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1758  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1759  01AA  1188               	bcf	8,3	;volatile
  1760  01AB                     l1063:
  1761                           
  1762                           ;./lcd.h: 99:    Lcd_SetBit(Lower_Nibble);
  1763  01AB  0829               	movf	Lcd_Print_Char@Lower_Nibble,w
  1764  01AC  120A  118A  24B0  120A  118A  	fcall	_Lcd_SetBit
  1765  01B1                     l1065:
  1766                           
  1767                           ;./lcd.h: 100:    RD3 = 1;
  1768  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1769  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1770  01B3  1588               	bsf	8,3	;volatile
  1771  01B4                     l1067:
  1772                           
  1773                           ;./lcd.h: 101:    for(int i=2130483; i<=0; i--) __nop();
  1774  01B4  3033               	movlw	51
  1775  01B5  00AE               	movwf	Lcd_Print_Char@i_114
  1776  01B6  3082               	movlw	130
  1777  01B7  00AF               	movwf	Lcd_Print_Char@i_114+1
  1778  01B8                     l59:
  1779  01B8  0000               	nop
  1780  01B9                     l1073:
  1781  01B9  30FF               	movlw	255
  1782  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1783  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1784  01BC  07AE               	addwf	Lcd_Print_Char@i_114,f
  1785  01BD  1803               	skipnc
  1786  01BE  0AAF               	incf	Lcd_Print_Char@i_114+1,f
  1787  01BF  30FF               	movlw	255
  1788  01C0  07AF               	addwf	Lcd_Print_Char@i_114+1,f
  1789  01C1                     l1075:
  1790  01C1  082F               	movf	Lcd_Print_Char@i_114+1,w
  1791  01C2  3A80               	xorlw	128
  1792  01C3  00FF               	movwf	btemp+1
  1793  01C4  3080               	movlw	128
  1794  01C5  027F               	subwf	btemp+1,w
  1795  01C6  1D03               	skipz
  1796  01C7  29CA               	goto	u555
  1797  01C8  3001               	movlw	1
  1798  01C9  022E               	subwf	Lcd_Print_Char@i_114,w
  1799  01CA                     u555:
  1800  01CA  1C03               	skipc
  1801  01CB  29CD               	goto	u551
  1802  01CC  29CE               	goto	u550
  1803  01CD                     u551:
  1804  01CD  29B8               	goto	l59
  1805  01CE                     u550:
  1806  01CE                     l60:
  1807                           
  1808                           ;./lcd.h: 102:    RD3 = 0;
  1809  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1810  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1811  01D0  1188               	bcf	8,3	;volatile
  1812  01D1                     l61:
  1813  01D1  0008               	return
  1814  01D2                     __end_of_Lcd_Print_Char:
  1815                           
  1816                           	psect	text8
  1817  04B0                     __ptext8:	
  1818 ;; *************** function _Lcd_SetBit *****************
  1819 ;; Defined at:
  1820 ;;		line 12 in file "./lcd.h"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  data_bit        1    wreg     unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  data_bit        1    7[BANK0 ] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       1       0       0       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         0       1       0       0       0
  1838 ;;Total ram usage:        1 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    4
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_Lcd_Cmd
  1845 ;;		_Lcd_Start
  1846 ;;		_Lcd_Print_Char
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _Lcd_SetBit
  1852  04B0                     _Lcd_SetBit:
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _Lcd_SetBit: [wreg]
  1856                           ;Lcd_SetBit@data_bit stored from wreg
  1857  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1858  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1859  04B2  00A7               	movwf	Lcd_SetBit@data_bit
  1860  04B3                     l1015:
  1861                           
  1862                           ;./lcd.h: 12: void Lcd_SetBit(char data_bit);./lcd.h: 13: {;./lcd.h: 14:     if(data_bit
      +                          & 1)
  1863  04B3  1C27               	btfss	Lcd_SetBit@data_bit,0
  1864  04B4  2CB6               	goto	u451
  1865  04B5  2CB7               	goto	u450
  1866  04B6                     u451:
  1867  04B6  2CB9               	goto	l29
  1868  04B7                     u450:
  1869  04B7                     l1017:
  1870                           
  1871                           ;./lcd.h: 15:         RD4 = 1;
  1872  04B7  1608               	bsf	8,4	;volatile
  1873  04B8  2CBA               	goto	l30
  1874  04B9                     l29:	
  1875                           ;./lcd.h: 16:     else
  1876                           
  1877                           
  1878                           ;./lcd.h: 17:         RD4 = 0;
  1879  04B9  1208               	bcf	8,4	;volatile
  1880  04BA                     l30:
  1881                           
  1882                           ;./lcd.h: 19:     if(data_bit& 2)
  1883  04BA  1CA7               	btfss	Lcd_SetBit@data_bit,1
  1884  04BB  2CBD               	goto	u461
  1885  04BC  2CBE               	goto	u460
  1886  04BD                     u461:
  1887  04BD  2CC0               	goto	l31
  1888  04BE                     u460:
  1889  04BE                     l1019:
  1890                           
  1891                           ;./lcd.h: 20:         RD5 = 1;
  1892  04BE  1688               	bsf	8,5	;volatile
  1893  04BF  2CC1               	goto	l32
  1894  04C0                     l31:	
  1895                           ;./lcd.h: 21:     else
  1896                           
  1897                           
  1898                           ;./lcd.h: 22:         RD5 = 0;
  1899  04C0  1288               	bcf	8,5	;volatile
  1900  04C1                     l32:
  1901                           
  1902                           ;./lcd.h: 24:     if(data_bit& 4)
  1903  04C1  1D27               	btfss	Lcd_SetBit@data_bit,2
  1904  04C2  2CC4               	goto	u471
  1905  04C3  2CC5               	goto	u470
  1906  04C4                     u471:
  1907  04C4  2CC7               	goto	l33
  1908  04C5                     u470:
  1909  04C5                     l1021:
  1910                           
  1911                           ;./lcd.h: 25:         RD6 = 1;
  1912  04C5  1708               	bsf	8,6	;volatile
  1913  04C6  2CC8               	goto	l34
  1914  04C7                     l33:	
  1915                           ;./lcd.h: 26:     else
  1916                           
  1917                           
  1918                           ;./lcd.h: 27:         RD6 = 0;
  1919  04C7  1308               	bcf	8,6	;volatile
  1920  04C8                     l34:
  1921                           
  1922                           ;./lcd.h: 29:     if(data_bit& 8)
  1923  04C8  1DA7               	btfss	Lcd_SetBit@data_bit,3
  1924  04C9  2CCB               	goto	u481
  1925  04CA  2CCC               	goto	u480
  1926  04CB                     u481:
  1927  04CB  2CCE               	goto	l35
  1928  04CC                     u480:
  1929  04CC                     l1023:
  1930                           
  1931                           ;./lcd.h: 30:         RD7 = 1;
  1932  04CC  1788               	bsf	8,7	;volatile
  1933  04CD  2CCF               	goto	l37
  1934  04CE                     l35:	
  1935                           ;./lcd.h: 31:     else
  1936                           
  1937                           
  1938                           ;./lcd.h: 32:         RD7 = 0;
  1939  04CE  1388               	bcf	8,7	;volatile
  1940  04CF                     l37:
  1941  04CF  0008               	return
  1942  04D0                     __end_of_Lcd_SetBit:
  1943                           
  1944                           	psect	text9
  1945  038F                     __ptext9:	
  1946 ;; *************** function _ISR_example *****************
  1947 ;; Defined at:
  1948 ;;		line 17 in file "main.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0
  1964 ;;      Temps:          0       7       0       0       0
  1965 ;;      Totals:         0       7       0       0       0
  1966 ;;Total ram usage:        7 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    3
  1969 ;; This function calls:
  1970 ;;		_Lcd_Clear
  1971 ;;		i1_Lcd_Print_String
  1972 ;;		i1_Lcd_Set_Cursor
  1973 ;; This function is called by:
  1974 ;;		Interrupt level 1
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _ISR_example
  1980  038F                     _ISR_example:
  1981  038F                     i1l1293:
  1982                           
  1983                           ;main.c: 19:         if (INTF==1)
  1984  038F  1C8B               	btfss	11,1	;volatile
  1985  0390  2B92               	goto	u88_21
  1986  0391  2B93               	goto	u88_20
  1987  0392                     u88_21:
  1988  0392  2BC8               	goto	i1l83
  1989  0393                     u88_20:
  1990  0393                     i1l1295:
  1991                           
  1992                           ;main.c: 20:         {;main.c: 21:             Lcd_Clear();
  1993  0393  120A  118A  2506  120A  118A  	fcall	_Lcd_Clear
  1994                           
  1995                           ;main.c: 22:             Lcd_Set_Cursor(1,1);
  1996  0398  01F4               	clrf	i1Lcd_Set_Cursor@b
  1997  0399  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  1998  039A  3001               	movlw	1
  1999  039B  120A  118A  233D  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2000  03A0                     i1l1297:
  2001                           
  2002                           ;main.c: 23:             Lcd_Print_String("Enter Interrupt");
  2003  03A0  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2004  03A1  120A  118A  2469  120A  118A  	fcall	i1_Lcd_Print_String
  2005  03A6                     i1l1299:
  2006                           
  2007                           ;main.c: 24:             Lcd_Set_Cursor(2,1);
  2008  03A6  01F4               	clrf	i1Lcd_Set_Cursor@b
  2009  03A7  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2010  03A8  3002               	movlw	2
  2011  03A9  120A  118A  233D  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2012                           
  2013                           ;main.c: 25:             Lcd_Print_String("Service Routine");
  2014  03AE  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2015  03AF  120A  118A  2469  120A  118A  	fcall	i1_Lcd_Print_String
  2016  03B4                     i1l1301:
  2017                           
  2018                           ;main.c: 26:             INTF = 0;
  2019  03B4  108B               	bcf	11,1	;volatile
  2020  03B5                     i1l1303:
  2021                           
  2022                           ;main.c: 27:            _delay((unsigned long)((5000)*(20000000/4000.0)));
  2023  03B5  307F               	movlw	127
  2024  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2025  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2026  03B8  00A2               	movwf	??_ISR_example+2
  2027  03B9  30D4               	movlw	212
  2028  03BA  00A1               	movwf	??_ISR_example+1
  2029  03BB  3031               	movlw	49
  2030  03BC  00A0               	movwf	??_ISR_example
  2031  03BD                     u93_27:
  2032  03BD  0BA0               	decfsz	??_ISR_example,f
  2033  03BE  2BBD               	goto	u93_27
  2034  03BF  0BA1               	decfsz	??_ISR_example+1,f
  2035  03C0  2BBD               	goto	u93_27
  2036  03C1  0BA2               	decfsz	??_ISR_example+2,f
  2037  03C2  2BBD               	goto	u93_27
  2038  03C3                     i1l1305:
  2039                           
  2040                           ;main.c: 28:             Lcd_Clear();
  2041  03C3  120A  118A  2506  120A  118A  	fcall	_Lcd_Clear
  2042  03C8                     i1l83:
  2043  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2044  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2045  03CA  0826               	movf	??_ISR_example+6,w
  2046  03CB  00FF               	movwf	btemp+1
  2047  03CC  0825               	movf	??_ISR_example+5,w
  2048  03CD  008A               	movwf	10
  2049  03CE  0824               	movf	??_ISR_example+4,w
  2050  03CF  0084               	movwf	4
  2051  03D0  0E23               	swapf	??_ISR_example+3,w
  2052  03D1  0083               	movwf	3
  2053  03D2  0EFE               	swapf	btemp,f
  2054  03D3  0E7E               	swapf	btemp,w
  2055  03D4  0009               	retfie
  2056  03D5                     __end_of_ISR_example:
  2057                           
  2058                           	psect	intentry
  2059  0004                     __pintentry:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _ISR_example: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2062                           
  2063  0004                     interrupt_function:
  2064  007E                     saved_w	set	btemp
  2065  0004  00FE               	movwf	btemp
  2066  0005  0E03               	swapf	3,w
  2067  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0008  00A3               	movwf	??_ISR_example+3
  2070  0009  0804               	movf	4,w
  2071  000A  00A4               	movwf	??_ISR_example+4
  2072  000B  080A               	movf	10,w
  2073  000C  00A5               	movwf	??_ISR_example+5
  2074  000D  087F               	movf	btemp+1,w
  2075  000E  00A6               	movwf	??_ISR_example+6
  2076  000F  120A  118A  2B8F   	ljmp	_ISR_example
  2077                           
  2078                           	psect	text10
  2079  033D                     __ptext10:	
  2080 ;; *************** function i1_Lcd_Set_Cursor *****************
  2081 ;; Defined at:
  2082 ;;		line 50 in file "./lcd.h"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  a               1    wreg     unsigned char 
  2085 ;;  b               1    4[COMMON] unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  a               1    7[COMMON] unsigned char 
  2088 ;;  temp            1   10[COMMON] unsigned char 
  2089 ;;  y               1    9[COMMON] unsigned char 
  2090 ;;  z               1    8[COMMON] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         1       0       0       0       0
  2101 ;;      Locals:         4       0       0       0       0
  2102 ;;      Temps:          2       0       0       0       0
  2103 ;;      Totals:         7       0       0       0       0
  2104 ;;Total ram usage:        7 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    2
  2107 ;; This function calls:
  2108 ;;		i1_Lcd_Cmd
  2109 ;; This function is called by:
  2110 ;;		_ISR_example
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function i1_Lcd_Set_Cursor
  2116  033D                     i1_Lcd_Set_Cursor:
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2120                           ;i1Lcd_Set_Cursor@a stored from wreg
  2121  033D  00F7               	movwf	i1Lcd_Set_Cursor@a
  2122  033E                     i1l1265:
  2123                           
  2124                           ;./lcd.h: 50: void Lcd_Set_Cursor(char a, char b);./lcd.h: 51: {;./lcd.h: 52:     char t
      +                          emp,z,y;;./lcd.h: 53:     if(a== 1)
  2125  033E  0377               	decf	i1Lcd_Set_Cursor@a,w
  2126  033F  1D03               	btfss	3,2
  2127  0340  2B42               	goto	u83_21
  2128  0341  2B43               	goto	u83_20
  2129  0342                     u83_21:
  2130  0342  2B66               	goto	i1l1275
  2131  0343                     u83_20:
  2132  0343                     i1l1267:
  2133                           
  2134                           ;./lcd.h: 54:     {;./lcd.h: 55:       temp = 0x80 + b - 1;
  2135  0343  0874               	movf	i1Lcd_Set_Cursor@b,w
  2136  0344  3E7F               	addlw	127
  2137  0345  00F5               	movwf	??i1_Lcd_Set_Cursor
  2138  0346  0875               	movf	??i1_Lcd_Set_Cursor,w
  2139  0347  00FA               	movwf	i1Lcd_Set_Cursor@temp
  2140                           
  2141                           ;./lcd.h: 56:         z = temp>>4;
  2142  0348  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2143  0349  00F5               	movwf	??i1_Lcd_Set_Cursor
  2144  034A  3004               	movlw	4
  2145  034B                     u84_25:
  2146  034B  1003               	clrc
  2147  034C  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2148  034D  3EFF               	addlw	-1
  2149  034E  1D03               	skipz
  2150  034F  2B4B               	goto	u84_25
  2151  0350  0875               	movf	??i1_Lcd_Set_Cursor,w
  2152  0351  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  2153  0352  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  2154  0353  00F8               	movwf	i1Lcd_Set_Cursor@z
  2155  0354                     i1l1269:
  2156                           
  2157                           ;./lcd.h: 57:         y = temp & 0x0F;
  2158  0354  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2159  0355  390F               	andlw	15
  2160  0356  00F5               	movwf	??i1_Lcd_Set_Cursor
  2161  0357  0875               	movf	??i1_Lcd_Set_Cursor,w
  2162  0358  00F9               	movwf	i1Lcd_Set_Cursor@y
  2163  0359                     i1l1271:
  2164                           
  2165                           ;./lcd.h: 58:         Lcd_Cmd(z);
  2166  0359  0878               	movf	i1Lcd_Set_Cursor@z,w
  2167  035A  120A  118A  24EC  120A  118A  	fcall	i1_Lcd_Cmd
  2168  035F                     i1l1273:
  2169                           
  2170                           ;./lcd.h: 59:         Lcd_Cmd(y);
  2171  035F  0879               	movf	i1Lcd_Set_Cursor@y,w
  2172  0360  120A  118A  24EC  120A  118A  	fcall	i1_Lcd_Cmd
  2173                           
  2174                           ;./lcd.h: 60:     }
  2175  0365  2B8E               	goto	i1l49
  2176  0366                     i1l1275:
  2177  0366  3002               	movlw	2
  2178  0367  0677               	xorwf	i1Lcd_Set_Cursor@a,w
  2179  0368  1D03               	btfss	3,2
  2180  0369  2B6B               	goto	u85_21
  2181  036A  2B6C               	goto	u85_20
  2182  036B                     u85_21:
  2183  036B  2B8E               	goto	i1l49
  2184  036C                     u85_20:
  2185  036C                     i1l1277:
  2186                           
  2187                           ;./lcd.h: 62:     {;./lcd.h: 63:         temp = 0xC0 + b - 1;
  2188  036C  0874               	movf	i1Lcd_Set_Cursor@b,w
  2189  036D  3EBF               	addlw	191
  2190  036E  00F5               	movwf	??i1_Lcd_Set_Cursor
  2191  036F  0875               	movf	??i1_Lcd_Set_Cursor,w
  2192  0370  00FA               	movwf	i1Lcd_Set_Cursor@temp
  2193                           
  2194                           ;./lcd.h: 64:         z = temp>>4;
  2195  0371  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2196  0372  00F5               	movwf	??i1_Lcd_Set_Cursor
  2197  0373  3004               	movlw	4
  2198  0374                     u86_25:
  2199  0374  1003               	clrc
  2200  0375  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2201  0376  3EFF               	addlw	-1
  2202  0377  1D03               	skipz
  2203  0378  2B74               	goto	u86_25
  2204  0379  0875               	movf	??i1_Lcd_Set_Cursor,w
  2205  037A  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  2206  037B  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  2207  037C  00F8               	movwf	i1Lcd_Set_Cursor@z
  2208  037D                     i1l1279:
  2209                           
  2210                           ;./lcd.h: 65:         y = temp & 0x0F;
  2211  037D  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2212  037E  390F               	andlw	15
  2213  037F  00F5               	movwf	??i1_Lcd_Set_Cursor
  2214  0380  0875               	movf	??i1_Lcd_Set_Cursor,w
  2215  0381  00F9               	movwf	i1Lcd_Set_Cursor@y
  2216  0382                     i1l1281:
  2217                           
  2218                           ;./lcd.h: 66:         Lcd_Cmd(z);
  2219  0382  0878               	movf	i1Lcd_Set_Cursor@z,w
  2220  0383  120A  118A  24EC  120A  118A  	fcall	i1_Lcd_Cmd
  2221  0388                     i1l1283:
  2222                           
  2223                           ;./lcd.h: 67:         Lcd_Cmd(y);
  2224  0388  0879               	movf	i1Lcd_Set_Cursor@y,w
  2225  0389  120A  118A  24EC  120A  118A  	fcall	i1_Lcd_Cmd
  2226  038E                     i1l49:
  2227  038E  0008               	return
  2228  038F                     __end_ofi1_Lcd_Set_Cursor:
  2229                           
  2230                           	psect	text11
  2231  0469                     __ptext11:	
  2232 ;; *************** function i1_Lcd_Print_String *****************
  2233 ;; Defined at:
  2234 ;;		line 105 in file "./lcd.h"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  a               1    wreg     PTR unsigned char 
  2237 ;;		 -> STR_4(9), STR_3(17), STR_2(16), STR_1(16), 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  a               1    9[COMMON] PTR unsigned char 
  2240 ;;		 -> STR_4(9), STR_3(17), STR_2(16), STR_1(16), 
  2241 ;;  i               2   10[COMMON] int 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         3       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         3       0       0       0       0
  2255 ;;Total ram usage:        3 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    2
  2258 ;; This function calls:
  2259 ;;		i1_Lcd_Print_Char
  2260 ;; This function is called by:
  2261 ;;		_ISR_example
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function i1_Lcd_Print_String
  2267  0469                     i1_Lcd_Print_String:
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in i1_Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2271                           ;i1Lcd_Print_String@a stored from wreg
  2272  0469  00F9               	movwf	i1Lcd_Print_String@a
  2273  046A                     i1l1285:
  2274                           
  2275                           ;./lcd.h: 105: void Lcd_Print_String(char *a);./lcd.h: 106: {;./lcd.h: 107:     int i;;.
      +                          /lcd.h: 108:     for(i=0;a[i]!='\0';i++)
  2276  046A  01FA               	clrf	i1Lcd_Print_String@i
  2277  046B  01FB               	clrf	i1Lcd_Print_String@i+1
  2278  046C  2C80               	goto	i1l1291
  2279  046D                     i1l1287:
  2280                           
  2281                           ;./lcd.h: 109:        Lcd_Print_Char(a[i]);
  2282  046D  087A               	movf	i1Lcd_Print_String@i,w
  2283  046E  0779               	addwf	i1Lcd_Print_String@a,w
  2284  046F  0084               	movwf	4
  2285  0470  120A  118A  2400  120A  118A  	fcall	stringdir
  2286  0475  120A  118A  21D2  120A  118A  	fcall	i1_Lcd_Print_Char
  2287  047A                     i1l1289:
  2288  047A  3001               	movlw	1
  2289  047B  07FA               	addwf	i1Lcd_Print_String@i,f
  2290  047C  1803               	skipnc
  2291  047D  0AFB               	incf	i1Lcd_Print_String@i+1,f
  2292  047E  3000               	movlw	0
  2293  047F  07FB               	addwf	i1Lcd_Print_String@i+1,f
  2294  0480                     i1l1291:
  2295  0480  087A               	movf	i1Lcd_Print_String@i,w
  2296  0481  0779               	addwf	i1Lcd_Print_String@a,w
  2297  0482  0084               	movwf	4
  2298  0483  120A  118A  2400  120A  118A  	fcall	stringdir
  2299  0488  3A00               	xorlw	0
  2300  0489  1D03               	skipz
  2301  048A  2C8C               	goto	u87_21
  2302  048B  2C8D               	goto	u87_20
  2303  048C                     u87_21:
  2304  048C  2C6D               	goto	i1l1287
  2305  048D                     u87_20:
  2306  048D                     i1l67:
  2307  048D  0008               	return
  2308  048E                     __end_ofi1_Lcd_Print_String:
  2309                           
  2310                           	psect	text12
  2311  01D2                     __ptext12:	
  2312 ;; *************** function i1_Lcd_Print_Char *****************
  2313 ;; Defined at:
  2314 ;;		line 89 in file "./lcd.h"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  data            1    wreg     unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  data            1    4[COMMON] unsigned char 
  2319 ;;  i               2    7[COMMON] int 
  2320 ;;  i               2    5[COMMON] int 
  2321 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  2322 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       0       0       0       0
  2333 ;;      Locals:         7       0       0       0       0
  2334 ;;      Temps:          1       0       0       0       0
  2335 ;;      Totals:         8       0       0       0       0
  2336 ;;Total ram usage:        8 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    1
  2339 ;; This function calls:
  2340 ;;		i1_Lcd_SetBit
  2341 ;; This function is called by:
  2342 ;;		i1_Lcd_Print_String
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function i1_Lcd_Print_Char
  2348  01D2                     i1_Lcd_Print_Char:
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in i1_Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2352                           ;i1Lcd_Print_Char@data stored from wreg
  2353  01D2  00F4               	movwf	i1Lcd_Print_Char@data
  2354  01D3                     i1l1087:
  2355                           
  2356                           ;./lcd.h: 89: void Lcd_Print_Char(char data);./lcd.h: 90: {;./lcd.h: 91:    char Lower_N
      +                          ibble,Upper_Nibble;;./lcd.h: 92:    Lower_Nibble = data&0x0F;
  2357  01D3  0874               	movf	i1Lcd_Print_Char@data,w
  2358  01D4  390F               	andlw	15
  2359  01D5  00F1               	movwf	??i1_Lcd_Print_Char
  2360  01D6  0871               	movf	??i1_Lcd_Print_Char,w
  2361  01D7  00F2               	movwf	i1Lcd_Print_Char@Lower_Nibble
  2362                           
  2363                           ;./lcd.h: 93:    Upper_Nibble = data&0xF0;
  2364  01D8  0874               	movf	i1Lcd_Print_Char@data,w
  2365  01D9  39F0               	andlw	240
  2366  01DA  00F1               	movwf	??i1_Lcd_Print_Char
  2367  01DB  0871               	movf	??i1_Lcd_Print_Char,w
  2368  01DC  00F3               	movwf	i1Lcd_Print_Char@Upper_Nibble
  2369  01DD                     i1l1089:
  2370                           
  2371                           ;./lcd.h: 94:    RD2 = 1;
  2372  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2373  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2374  01DF  1508               	bsf	8,2	;volatile
  2375  01E0                     i1l1091:
  2376                           
  2377                           ;./lcd.h: 95:    Lcd_SetBit(Upper_Nibble>>4);
  2378  01E0  0873               	movf	i1Lcd_Print_Char@Upper_Nibble,w
  2379  01E1  00F1               	movwf	??i1_Lcd_Print_Char
  2380  01E2  3004               	movlw	4
  2381  01E3                     u56_25:
  2382  01E3  1003               	clrc
  2383  01E4  0CF1               	rrf	??i1_Lcd_Print_Char,f
  2384  01E5  3EFF               	addlw	-1
  2385  01E6  1D03               	skipz
  2386  01E7  29E3               	goto	u56_25
  2387  01E8  0871               	movf	??i1_Lcd_Print_Char,w
  2388  01E9  120A  118A  248E  120A  118A  	fcall	i1_Lcd_SetBit
  2389  01EE                     i1l1093:
  2390                           
  2391                           ;./lcd.h: 96:    RD3 = 1;
  2392  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2393  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2394  01F0  1588               	bsf	8,3	;volatile
  2395  01F1                     i1l1095:
  2396                           
  2397                           ;./lcd.h: 97:    for(int i=2130483; i<=0; i--) __nop();
  2398  01F1  3033               	movlw	51
  2399  01F2  00F5               	movwf	i1Lcd_Print_Char@i
  2400  01F3  3082               	movlw	130
  2401  01F4  00F6               	movwf	i1Lcd_Print_Char@i+1
  2402  01F5                     i1l57:
  2403  01F5  0000               	nop
  2404  01F6                     i1l1101:
  2405  01F6  30FF               	movlw	255
  2406  01F7  07F5               	addwf	i1Lcd_Print_Char@i,f
  2407  01F8  1803               	skipnc
  2408  01F9  0AF6               	incf	i1Lcd_Print_Char@i+1,f
  2409  01FA  30FF               	movlw	255
  2410  01FB  07F6               	addwf	i1Lcd_Print_Char@i+1,f
  2411  01FC                     i1l1103:
  2412  01FC  0876               	movf	i1Lcd_Print_Char@i+1,w
  2413  01FD  3A80               	xorlw	128
  2414  01FE  00FF               	movwf	btemp+1
  2415  01FF  3080               	movlw	128
  2416  0200  027F               	subwf	btemp+1,w
  2417  0201  1D03               	skipz
  2418  0202  2A05               	goto	u57_25
  2419  0203  3001               	movlw	1
  2420  0204  0275               	subwf	i1Lcd_Print_Char@i,w
  2421  0205                     u57_25:
  2422  0205  1C03               	skipc
  2423  0206  2A08               	goto	u57_21
  2424  0207  2A09               	goto	u57_20
  2425  0208                     u57_21:
  2426  0208  29F5               	goto	i1l57
  2427  0209                     u57_20:
  2428  0209                     i1l58:
  2429                           
  2430                           ;./lcd.h: 98:    RD3 = 0;
  2431  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2432  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2433  020B  1188               	bcf	8,3	;volatile
  2434  020C                     i1l1105:
  2435                           
  2436                           ;./lcd.h: 99:    Lcd_SetBit(Lower_Nibble);
  2437  020C  0872               	movf	i1Lcd_Print_Char@Lower_Nibble,w
  2438  020D  120A  118A  248E  120A  118A  	fcall	i1_Lcd_SetBit
  2439  0212                     i1l1107:
  2440                           
  2441                           ;./lcd.h: 100:    RD3 = 1;
  2442  0212  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0213  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0214  1588               	bsf	8,3	;volatile
  2445  0215                     i1l1109:
  2446                           
  2447                           ;./lcd.h: 101:    for(int i=2130483; i<=0; i--) __nop();
  2448  0215  3033               	movlw	51
  2449  0216  00F7               	movwf	i1Lcd_Print_Char@i_114
  2450  0217  3082               	movlw	130
  2451  0218  00F8               	movwf	i1Lcd_Print_Char@i_114+1
  2452  0219                     i1l59:
  2453  0219  0000               	nop
  2454  021A                     i1l1115:
  2455  021A  30FF               	movlw	255
  2456  021B  07F7               	addwf	i1Lcd_Print_Char@i_114,f
  2457  021C  1803               	skipnc
  2458  021D  0AF8               	incf	i1Lcd_Print_Char@i_114+1,f
  2459  021E  30FF               	movlw	255
  2460  021F  07F8               	addwf	i1Lcd_Print_Char@i_114+1,f
  2461  0220                     i1l1117:
  2462  0220  0878               	movf	i1Lcd_Print_Char@i_114+1,w
  2463  0221  3A80               	xorlw	128
  2464  0222  00FF               	movwf	btemp+1
  2465  0223  3080               	movlw	128
  2466  0224  027F               	subwf	btemp+1,w
  2467  0225  1D03               	skipz
  2468  0226  2A29               	goto	u58_25
  2469  0227  3001               	movlw	1
  2470  0228  0277               	subwf	i1Lcd_Print_Char@i_114,w
  2471  0229                     u58_25:
  2472  0229  1C03               	skipc
  2473  022A  2A2C               	goto	u58_21
  2474  022B  2A2D               	goto	u58_20
  2475  022C                     u58_21:
  2476  022C  2A19               	goto	i1l59
  2477  022D                     u58_20:
  2478  022D                     i1l60:
  2479                           
  2480                           ;./lcd.h: 102:    RD3 = 0;
  2481  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2482  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2483  022F  1188               	bcf	8,3	;volatile
  2484  0230                     i1l61:
  2485  0230  0008               	return
  2486  0231                     __end_ofi1_Lcd_Print_Char:
  2487                           
  2488                           	psect	text13
  2489  0506                     __ptext13:	
  2490 ;; *************** function _Lcd_Clear *****************
  2491 ;; Defined at:
  2492 ;;		line 44 in file "./lcd.h"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  2   42[None  ] int 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    2
  2513 ;; This function calls:
  2514 ;;		i1_Lcd_Cmd
  2515 ;; This function is called by:
  2516 ;;		_ISR_example
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _Lcd_Clear
  2522  0506                     _Lcd_Clear:
  2523  0506                     i1l1119:	
  2524                           ;incstack = 0
  2525                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2526                           
  2527                           
  2528                           ;./lcd.h: 46:     Lcd_Cmd(0);
  2529  0506  3000               	movlw	0
  2530  0507  120A  118A  24EC  120A  118A  	fcall	i1_Lcd_Cmd
  2531                           
  2532                           ;./lcd.h: 47:     Lcd_Cmd(1);
  2533  050C  3001               	movlw	1
  2534  050D  120A  118A  24EC  120A  118A  	fcall	i1_Lcd_Cmd
  2535  0512                     i1l43:
  2536  0512  0008               	return
  2537  0513                     __end_of_Lcd_Clear:
  2538                           
  2539                           	psect	text14
  2540  04EC                     __ptext14:	
  2541 ;; *************** function i1_Lcd_Cmd *****************
  2542 ;; Defined at:
  2543 ;;		line 35 in file "./lcd.h"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  a               1    wreg     unsigned char 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  a               1    3[COMMON] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       0       0       0
  2558 ;;      Locals:         1       0       0       0       0
  2559 ;;      Temps:          2       0       0       0       0
  2560 ;;      Totals:         3       0       0       0       0
  2561 ;;Total ram usage:        3 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    1
  2564 ;; This function calls:
  2565 ;;		i1_Lcd_SetBit
  2566 ;; This function is called by:
  2567 ;;		_Lcd_Clear
  2568 ;;		i1_Lcd_Set_Cursor
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function i1_Lcd_Cmd
  2574  04EC                     i1_Lcd_Cmd:
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2578                           ;i1Lcd_Cmd@a stored from wreg
  2579  04EC  00F3               	movwf	i1Lcd_Cmd@a
  2580  04ED                     i1l1077:
  2581                           
  2582                           ;./lcd.h: 35: void Lcd_Cmd(char a);./lcd.h: 36: {;./lcd.h: 37:     RD2 = 0;
  2583  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2584  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2585  04EF  1108               	bcf	8,2	;volatile
  2586  04F0                     i1l1079:
  2587                           
  2588                           ;./lcd.h: 38:     Lcd_SetBit(a);
  2589  04F0  0873               	movf	i1Lcd_Cmd@a,w
  2590  04F1  120A  118A  248E  120A  118A  	fcall	i1_Lcd_SetBit
  2591  04F6                     i1l1081:
  2592                           
  2593                           ;./lcd.h: 39:     RD3 = 1;
  2594  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2595  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2596  04F8  1588               	bsf	8,3	;volatile
  2597  04F9                     i1l1083:
  2598                           
  2599                           ;./lcd.h: 40:         _delay((unsigned long)((4)*(20000000/4000.0)));
  2600  04F9  301A               	movlw	26
  2601  04FA  00F2               	movwf	??i1_Lcd_Cmd+1
  2602  04FB  30F8               	movlw	248
  2603  04FC  00F1               	movwf	??i1_Lcd_Cmd
  2604  04FD                     u94_27:
  2605  04FD  0BF1               	decfsz	??i1_Lcd_Cmd,f
  2606  04FE  2CFD               	goto	u94_27
  2607  04FF  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  2608  0500  2CFD               	goto	u94_27
  2609  0501  0000               	nop
  2610  0502                     i1l1085:
  2611                           
  2612                           ;./lcd.h: 41:         RD3 = 0;
  2613  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0504  1188               	bcf	8,3	;volatile
  2616  0505                     i1l40:
  2617  0505  0008               	return
  2618  0506                     __end_ofi1_Lcd_Cmd:
  2619                           
  2620                           	psect	text15
  2621  048E                     __ptext15:	
  2622 ;; *************** function i1_Lcd_SetBit *****************
  2623 ;; Defined at:
  2624 ;;		line 12 in file "./lcd.h"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  data_bit        1    wreg     unsigned char 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  data_bit        1    0[COMMON] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       0       0       0       0
  2639 ;;      Locals:         1       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0
  2641 ;;      Totals:         1       0       0       0       0
  2642 ;;Total ram usage:        1 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		i1_Lcd_Cmd
  2648 ;;		i1_Lcd_Print_Char
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function i1_Lcd_SetBit
  2654  048E                     i1_Lcd_SetBit:
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in i1_Lcd_SetBit: [wreg]
  2658                           ;i1Lcd_SetBit@data_bit stored from wreg
  2659  048E  00F0               	movwf	i1Lcd_SetBit@data_bit
  2660  048F                     i1l1025:
  2661                           
  2662                           ;./lcd.h: 12: void Lcd_SetBit(char data_bit);./lcd.h: 13: {;./lcd.h: 14:     if(data_bit
      +                          & 1)
  2663  048F  1C70               	btfss	i1Lcd_SetBit@data_bit,0
  2664  0490  2C92               	goto	u49_21
  2665  0491  2C93               	goto	u49_20
  2666  0492                     u49_21:
  2667  0492  2C97               	goto	i1l29
  2668  0493                     u49_20:
  2669  0493                     i1l1027:
  2670                           
  2671                           ;./lcd.h: 15:         RD4 = 1;
  2672  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0495  1608               	bsf	8,4	;volatile
  2675  0496  2C9A               	goto	i1l30
  2676  0497                     i1l29:	
  2677                           ;./lcd.h: 16:     else
  2678                           
  2679                           
  2680                           ;./lcd.h: 17:         RD4 = 0;
  2681  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0499  1208               	bcf	8,4	;volatile
  2684  049A                     i1l30:
  2685                           
  2686                           ;./lcd.h: 19:     if(data_bit& 2)
  2687  049A  1CF0               	btfss	i1Lcd_SetBit@data_bit,1
  2688  049B  2C9D               	goto	u50_21
  2689  049C  2C9E               	goto	u50_20
  2690  049D                     u50_21:
  2691  049D  2CA0               	goto	i1l31
  2692  049E                     u50_20:
  2693  049E                     i1l1029:
  2694                           
  2695                           ;./lcd.h: 20:         RD5 = 1;
  2696  049E  1688               	bsf	8,5	;volatile
  2697  049F  2CA1               	goto	i1l32
  2698  04A0                     i1l31:	
  2699                           ;./lcd.h: 21:     else
  2700                           
  2701                           
  2702                           ;./lcd.h: 22:         RD5 = 0;
  2703  04A0  1288               	bcf	8,5	;volatile
  2704  04A1                     i1l32:
  2705                           
  2706                           ;./lcd.h: 24:     if(data_bit& 4)
  2707  04A1  1D70               	btfss	i1Lcd_SetBit@data_bit,2
  2708  04A2  2CA4               	goto	u51_21
  2709  04A3  2CA5               	goto	u51_20
  2710  04A4                     u51_21:
  2711  04A4  2CA7               	goto	i1l33
  2712  04A5                     u51_20:
  2713  04A5                     i1l1031:
  2714                           
  2715                           ;./lcd.h: 25:         RD6 = 1;
  2716  04A5  1708               	bsf	8,6	;volatile
  2717  04A6  2CA8               	goto	i1l34
  2718  04A7                     i1l33:	
  2719                           ;./lcd.h: 26:     else
  2720                           
  2721                           
  2722                           ;./lcd.h: 27:         RD6 = 0;
  2723  04A7  1308               	bcf	8,6	;volatile
  2724  04A8                     i1l34:
  2725                           
  2726                           ;./lcd.h: 29:     if(data_bit& 8)
  2727  04A8  1DF0               	btfss	i1Lcd_SetBit@data_bit,3
  2728  04A9  2CAB               	goto	u52_21
  2729  04AA  2CAC               	goto	u52_20
  2730  04AB                     u52_21:
  2731  04AB  2CAE               	goto	i1l35
  2732  04AC                     u52_20:
  2733  04AC                     i1l1033:
  2734                           
  2735                           ;./lcd.h: 30:         RD7 = 1;
  2736  04AC  1788               	bsf	8,7	;volatile
  2737  04AD  2CAF               	goto	i1l37
  2738  04AE                     i1l35:	
  2739                           ;./lcd.h: 31:     else
  2740                           
  2741                           
  2742                           ;./lcd.h: 32:         RD7 = 0;
  2743  04AE  1388               	bcf	8,7	;volatile
  2744  04AF                     i1l37:
  2745  04AF  0008               	return
  2746  04B0                     __end_ofi1_Lcd_SetBit:
  2747  007E                     btemp	set	126	;btemp
  2748  007E                     wtemp0	set	126
  2749                           
  2750                           	psect	config
  2751                           
  2752                           ;Config register CONFIG @ 0x2007
  2753                           ;	Oscillator Selection bits
  2754                           ;	FOSC = HS, HS oscillator
  2755                           ;	Watchdog Timer Enable bit
  2756                           ;	WDTE = OFF, WDT disabled
  2757                           ;	Power-up Timer Enable bit
  2758                           ;	PWRTE = ON, PWRT enabled
  2759                           ;	Brown-out Reset Enable bit
  2760                           ;	BOREN = ON, BOR enabled
  2761                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2762                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2763                           ;	Data EEPROM Memory Code Protection bit
  2764                           ;	CPD = OFF, Data EEPROM code protection off
  2765                           ;	Flash Program Memory Write Enable bits
  2766                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2767                           ;	In-Circuit Debugger Mode bit
  2768                           ;	DEBUG = 0x1, unprogrammed default
  2769                           ;	Flash Program Memory Code Protection bit
  2770                           ;	CP = OFF, Code protection off
  2771  2007                     	org	8199
  2772  2007  3F72               	dw	16242

Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     26      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[9]), STR_3(CODE[17]), STR_2(CODE[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_example in COMMON

    _ISR_example->i1_Lcd_Print_String
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Print_String->i1_Lcd_Print_Char
    i1_Lcd_Print_Char->i1_Lcd_SetBit
    _Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_SetBit

Critical Paths under _main in BANK0

    _main->___awmod
    ___awmod->___awdiv
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit

Critical Paths under _ISR_example in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_example in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_example in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_example in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3298
                                             23 BANK0      3     3      0
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                             16 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              7 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                             11 BANK0      4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                             11 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              8 BANK0      3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     492
                                             16 BANK0      3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              8 BANK0      8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_example                                          7     7      0     902
                                              0 BANK0      7     7      0
                          _Lcd_Clear
                 i1_Lcd_Print_String
                   i1_Lcd_Set_Cursor
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Set_Cursor                                     7     6      1     432
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Print_String                                   3     3      0     360
                                              9 COMMON     3     3      0
                   i1_Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Print_Char                                     8     8      0     270
                                              1 COMMON     8     8      0
                       i1_Lcd_SetBit
 ---------------------------------------------------------------------------------
 (5) _Lcd_Clear                                            0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                       i1_Lcd_SetBit
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_SetBit                                         1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   ___awdiv
   ___awmod
     ___awdiv (ARG)

 _ISR_example (ROOT)
   _Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_SetBit
   i1_Lcd_Print_String
     i1_Lcd_Print_Char
       i1_Lcd_SetBit
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_SetBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Dec 15 18:40:31 2020

                           pc 0002                            l30 04BA                            l31 04C0  
                          l32 04C1                            l40 04EB                            l33 04C7  
                          l34 04C8                            l35 04CE                            l60 01CE  
                          l37 04CF                            l29 04B9                            l61 01D1  
                          l54 02E4                            l57 0192                            l49 033C  
                          l58 01A8                            l59 01B8                            l67 0468  
                ___awdiv@sign 002D                            fsr 0004                           l330 016E  
                         l343 028B                           _RD2 0042                           _RD3 0043  
                         _RD4 0044                           _RD5 0045                           _RD6 0046  
                         _RD7 0047                           u450 04B7                           u610 0318  
                         u451 04B6                           u611 0317                           u460 04BE  
                         u540 01A8                           u700 014C                           u461 04BD  
                         u541 01A7                           u605 02F5                           u701 014B  
                         u470 04C5                           u550 01CE                           u630 0468  
                         u471 04C4                           u551 01CD                           u535 0180  
                         u631 0467                           u480 04CC                           u720 0160  
                         u640 010D                           u481 04CB                           u545 01A4  
                         u625 0320                           u721 015F                           u705 0148  
                         u641 010C                           u730 0165                           u650 0118  
                         u810 027D                           u555 01CA                           u731 0164  
                         u715 0154                           u651 0117                           u811 027C  
                         u660 0129                           u820 0282                           u740 0238  
                         u661 0128                           u821 0281                           u805 0271  
                         u741 0237                           u590 02ED                           u750 0243  
                         u591 02EC                           u751 0242                           u680 013B  
                         u760 024E                           u681 013A                           u761 024D  
                         u907 029E                           u675 012D                           u780 0260  
                         u917 02AF                           u781 025F                           u790 026A  
                         u927 04E3                           u695 013C                           u791 0269  
                         u775 0252                           u795 0266                           u897 00F3  
                         _ch1 003F                           _ch2 003E                           _ch3 003D  
                         _ch4 003C                           fsr0 0004                  ___awmod@sign 0036  
                        l1021 04C5                          l1023 04CC                          l1015 04B3  
                        l1017 04B7                          l1041 04DD                          l1121 02E8  
                        l1201 0129                          l1019 04BE                          l1051 018B  
                        l1043 04E8                          l1035 04D3                          l1123 02ED  
                        l1131 0312                          l1211 014C                          l1203 012C  
                        l1061 019B                          l1053 018E                          l1045 0172  
                        l1037 04D4                          l1133 0318                          l1125 02FE  
                        l1141 028C                          l1221 0165                          l1213 0152  
                        l1205 0133                          l1063 01AB                          l1047 017C  
                        l1039 04DA                          l1135 0329                          l1127 0303  
                        l1143 0292                          l1223 016A                          l1215 0153  
                        l1207 0137                          l1231 0238                          l1311 0026  
                        l1073 01B9                          l1065 01B1                          l1049 017D  
                        l1137 032E                          l1129 0309                          l1161 02BA  
                        l1153 0292                          l1145 0292                          l1217 015A  
                        l1209 013B                          l1241 024E                          l1233 023D  
                        l1321 0052                          l1313 0027                          l1075 01C1  
                        l1067 01B4                          l1059 0193                          l1139 0334  
                        l1171 02D8                          l1163 02C0                          l1155 0298  
                        l1219 0160                          l1251 026A                          l1243 0251  
                        l1235 023F                          l1227 0231                          l1331 00B7  
                        l1323 0074                          l1315 0028                          l1307 0021  
                        l1181 045B                          l1173 02DE                          l1165 02C6  
                        l1157 02A3                          l1261 0287                          l1253 0270  
                        l1245 0258                          l1237 0243                          l1229 0234  
                        l1341 00E2                          l1333 00C1                          l1325 0096  
                        l1317 0029                          l1309 0024                          l1175 0443  
                        l1167 02CC                          l1159 02B4                          l1191 0114  
                        l1183 0106                          l1255 0277                          l1247 025C  
                        l1239 0248                          l1343 00EB                          l1335 00C7  
                        l1327 00A9                          l1319 002E                          l1177 0446  
                        l1169 02D2                          l1193 0118                          l1185 0109  
                        l1249 0260                          l1257 027D                          l1345 00FA  
                        l1337 00D0                          l1329 00B1                          l1179 0453  
                        l1195 011D                          l1187 010D                          l1259 0282  
                        l1339 00D9                          l1197 0121                          l1189 0112  
                        l1199 0123                          STR_1 0427                          STR_2 0417  
                        STR_3 0406                          STR_4 0437                          i1l30 049A  
                        _INTF 0059                          i1l31 04A0                          i1l32 04A1  
                        i1l40 0505                          i1l33 04A7                          i1l34 04A8  
                        i1l35 04AE                          i1l43 0512                          i1l60 022D  
                        i1l37 04AF                          i1l29 0497                          i1l61 0230  
                        i1l57 01F5                          i1l49 038E                          i1l58 0209  
                        i1l59 0219                          i1l67 048D                          i1l83 03C8  
                        _main 0021                          btemp 007E                          start 0012  
          Lcd_Print_Char@data 002B               __end_of_Lcd_Cmd 04EC  i1Lcd_Print_Char@Upper_Nibble 0073  
                  _Lcd_SetBit 04B0          i1Lcd_SetBit@data_bit 0070                         ?_main 0070  
             __end_of___awdiv 016F               __end_of___awmod 028C               ___awdiv@divisor 0027  
           ?i1_Lcd_Set_Cursor 0074               ___awdiv@counter 002C                         u50_20 049E  
                       u50_21 049D                         u51_20 04A5                         u51_21 04A4  
                       u52_20 04AC                         u52_21 04AB                         u56_25 01E3  
                       u49_20 0493                         u57_20 0209                         u49_21 0492  
                       u57_21 0208       __size_of_Lcd_Set_Cursor 0058                         u57_25 0205  
                       _TRISD 0088                         u58_20 022D                         u58_21 022C  
                       u58_25 0229                         u83_20 0343                         u83_21 0342  
                       u84_25 034B                         u85_20 036C                         u85_21 036B  
                       u93_27 03BD                         u86_25 0374                         u94_27 04FD  
                       u87_20 048D                         u87_21 048C                         u88_20 0393  
                       u88_21 0392            ??i1_Lcd_Set_Cursor 0075            __size_ofi1_Lcd_Cmd 001A  
                       pclath 000A     __size_of_Lcd_Print_String 0029           Lcd_Print_Char@i_114 002E  
                       status 0003                         wtemp0 007E             ?i1_Lcd_Print_Char 0070  
     __size_of_Lcd_Print_Char 0063            ??i1_Lcd_Print_Char 0071               __initialization 0015  
                __end_of_main 0106                        ??_main 0037            __size_of_Lcd_Clear 000D  
          __size_of_Lcd_Start 0059              ___awdiv@dividend 0029                        i1l1101 01F6  
                      i1l1031 04A5                        i1l1103 01FC                        i1l1033 04AC  
                      i1l1025 048F                        i1l1105 020C                        i1l1027 0493  
                      i1l1115 021A                        i1l1107 0212                        i1l1029 049E  
                      i1l1117 0220                        i1l1109 0215                        i1l1301 03B4  
                      i1l1119 0506                        i1l1303 03B5                        i1l1081 04F6  
                      i1l1305 03C3                        i1l1083 04F9                        i1l1091 01E0  
                      i1l1085 0502                        i1l1077 04ED                        i1l1093 01EE  
                      i1l1079 04F0                        i1l1095 01F1                        i1l1087 01D3  
                      i1l1271 0359                        i1l1089 01DD                        i1l1281 0382  
                      i1l1273 035F                        i1l1265 033E                        i1l1291 0480  
                      i1l1283 0388                        i1l1267 0343                        i1l1275 0366  
                      i1l1285 046A                        i1l1277 036C                        i1l1269 0354  
                      i1l1293 038F                        i1l1287 046D                        i1l1279 037D  
                      i1l1295 0393                        i1l1289 047A                        i1l1297 03A0  
                      i1l1299 03A6                     ??_Lcd_Cmd 0028                  ?_ISR_example 0070  
           __end_ofi1_Lcd_Cmd 0506                     ??___awdiv 002B                     ??___awmod 0034  
  __end_ofi1_Lcd_Print_String 048E                   ?_Lcd_SetBit 0070              ___awdiv@quotient 002E  
             ___awmod@divisor 0030                        _number 003A               ___awmod@counter 0035  
                      saved_w 007E               Lcd_Set_Cursor@a 002E               Lcd_Set_Cursor@b 002B  
             Lcd_Set_Cursor@y 0030               Lcd_Set_Cursor@z 002F       __end_of__initialization 001D  
           __end_of_Lcd_Clear 0513             __end_of_Lcd_Start 02E5                __pcstackCOMMON 0070  
              _Lcd_Set_Cursor 02E5                    __pbssBANK0 003A              _Lcd_Print_String 0440  
         __size_of_Lcd_SetBit 0020                _Lcd_Print_Char 016F                    __pmaintext 0021  
                  __pintentry 0004            Lcd_SetBit@data_bit 0027        __end_of_Lcd_Set_Cursor 033D  
                  __stringtab 0400                 ?i1_Lcd_SetBit 0070               Lcd_Print_Char@i 002C  
                     _Lcd_Cmd 04D0        __end_of_Lcd_Print_Char 01D2     __size_ofi1_Lcd_Set_Cursor 0052  
        __size_of_ISR_example 0046                       ___awdiv 0106                       ___awmod 0231  
             ?_Lcd_Set_Cursor 002B                       __ptext1 0231                       __ptext2 0106  
                     __ptext3 028C                       __ptext4 02E5                       __ptext5 04D0  
                     __ptext6 0440                       __ptext7 016F                       __ptext8 04B0  
                     __ptext9 038F     __size_ofi1_Lcd_Print_Char 005F              ___awmod@dividend 0032  
              ??i1_Lcd_SetBit 0070          end_of_initialization 001D               ?_Lcd_Print_Char 0070  
                ??_Lcd_SetBit 0027                     i1_Lcd_Cmd 04EC                     _TRISBbits 0086  
          i1_Lcd_Print_String 0469           ?i1_Lcd_Print_String 0070            __end_of_Lcd_SetBit 04D0  
                   _Lcd_Clear 0506                     _Lcd_Start 028C                    ?i1_Lcd_Cmd 0070  
        ??i1_Lcd_Print_String 0079      __end_of_Lcd_Print_String 0469           start_initialization 0015  
       i1Lcd_Print_Char@i_114 0077              i1_Lcd_Set_Cursor 033D             Lcd_Print_String@a 0032  
           Lcd_Print_String@i 0030                    ?_Lcd_Clear 0070                    ?_Lcd_Start 0070  
        __end_ofi1_Lcd_SetBit 04B0    Lcd_Print_Char@Lower_Nibble 0029              i1_Lcd_Print_Char 01D2  
                   ___latbits 0002                 __pcstackBANK0 0020                      ?_Lcd_Cmd 0070  
            ??_Lcd_Set_Cursor 002C                      ?___awdiv 0027                      ?___awmod 0030  
                 ??i1_Lcd_Cmd 0071          i1Lcd_Set_Cursor@temp 007A                     __pstrings 0400  
            ??_Lcd_Print_Char 0028             interrupt_function 0004                 ??_ISR_example 0020  
                    Lcd_Cmd@a 002A                   ??_Lcd_Clear 0074                   ??_Lcd_Start 002B  
                 __stringbase 0405              __size_of_Lcd_Cmd 001C          i1Lcd_Print_Char@data 0074  
       __size_ofi1_Lcd_SetBit 0022           __end_of_ISR_example 03D5  i1Lcd_Print_Char@Lower_Nibble 0072  
            __size_of___awdiv 0069              __size_of___awmod 005B            __end_of__stringtab 0406  
    __end_ofi1_Lcd_Set_Cursor 038F             ?_Lcd_Print_String 0070            ??_Lcd_Print_String 0030  
           i1Lcd_Set_Cursor@a 0077             i1Lcd_Set_Cursor@b 0074             i1Lcd_Set_Cursor@y 0079  
           i1Lcd_Set_Cursor@z 0078                      __ptext10 033D                      __ptext11 0469  
                    __ptext12 01D2                      __ptext13 0506                      __ptext14 04EC  
                    __ptext15 048E                  i1_Lcd_SetBit 048E                 __size_of_main 00E5  
    __end_ofi1_Lcd_Print_Char 0231    Lcd_Print_Char@Upper_Nibble 002A   __size_ofi1_Lcd_Print_String 0025  
                  _INTCONbits 000B                      intlevel1 0000                    i1Lcd_Cmd@a 0073  
                 _ISR_example 038F                     stringcode 0400            Lcd_Set_Cursor@temp 0031  
         i1Lcd_Print_String@a 0079           i1Lcd_Print_String@i 007A                    _OPTION_REG 0081  
                    stringdir 0400                      stringtab 0400             i1Lcd_Print_Char@i 0075  
